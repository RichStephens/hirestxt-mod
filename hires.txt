00000000: 2f2a 2020 6869 7265 7374 7874 2d64 656d  /*  hirestxt-dem
00000010: 6f2e 6320 2d20 4578 616d 706c 6520 7072  o.c - Example pr
00000020: 6f67 7261 6d20 7468 6174 2075 7365 7320  ogram that uses 
00000030: 6869 7265 7374 7874 2e68 2e0a 0a20 2020  hirestxt.h...   
00000040: 2042 7920 5069 6572 7265 2053 6172 7261   By Pierre Sarra
00000050: 7a69 6e20 3c68 7474 703a 2f2f 7361 7272  zin <http://sarr
00000060: 617a 6970 2e63 6f6d 2f3e 0a20 2020 2054  azip.com/>.    T
00000070: 6869 7320 6669 6c65 2069 7320 696e 2074  his file is in t
00000080: 6865 2070 7562 6c69 6320 646f 6d61 696e  he public domain
00000090: 2e0a 0a20 2020 2054 6869 7320 6465 6d6f  ...    This demo
000000a0: 2075 7365 7320 5654 3532 2073 6571 7565   uses VT52 seque
000000b0: 6e63 6573 2e0a 2020 2020 5468 6520 6c69  nces..    The li
000000c0: 6272 6172 7920 6d75 7374 204e 4f54 2068  brary must NOT h
000000d0: 6176 6520 6265 656e 2063 6f6d 7069 6c65  ave been compile
000000e0: 6420 7769 7468 2048 4952 4553 5445 5854  d with HIRESTEXT
000000f0: 5f4e 4f5f 5654 3532 2e0a 2a2f 0a0a 0a23  _NO_VT52..*/...#
00000100: 696e 636c 7564 6520 2268 6972 6573 7478  include "hirestx
00000110: 742e 6822 0a0a 0a23 6465 6669 6e65 2055  t.h"...#define U
00000120: 5345 5f35 3178 3234 0a23 6465 6669 6e65  SE_51x24.#define
00000130: 2055 5345 5f34 3278 3234 0a0a 0a65 6e75   USE_42x24...enu
00000140: 6d0a 7b0a 2020 2020 4252 4541 4b20 3d20  m.{.    BREAK = 
00000150: 332c 0a20 2020 2049 5251 5f56 4543 544f  3,.    IRQ_VECTO
00000160: 5220 3d20 3078 4646 4638 2c0a 2020 2020  R = 0xFFF8,.    
00000170: 434f 434f 335f 5343 5245 454e 203d 2030  COCO3_SCREEN = 0
00000180: 7838 3030 302c 0a7d 3b0a 0a0a 2f2f 2050  x8000,.};...// P
00000190: 616c 6574 7465 2073 6c6f 7420 6e61 6d65  alette slot name
000001a0: 7320 666f 7220 7563 624c 6f67 6f50 616c  s for ucbLogoPal
000001b0: 6574 7465 5661 6c75 6573 5b5d 2e0a 2f2f  etteValues[]..//
000001c0: 0a65 6e75 6d0a 7b0a 2020 2020 435f 424c  .enum.{.    C_BL
000001d0: 4143 4b2c 2020 2020 435f 424c 5545 2c20  ACK,    C_BLUE, 
000001e0: 2020 2020 435f 4752 4545 4e2c 2020 2020      C_GREEN,    
000001f0: 435f 4359 414e 2c0a 2020 2020 435f 5245  C_CYAN,.    C_RE
00000200: 442c 2020 2020 2020 435f 4d41 4745 4e54  D,      C_MAGENT
00000210: 412c 2020 435f 5945 4c4c 4f57 2c20 2020  A,  C_YELLOW,   
00000220: 435f 5748 4954 452c 0a20 2020 2043 5f42  C_WHITE,.    C_B
00000230: 524f 574e 2c20 2020 2043 5f54 414e 2c20  ROWN,    C_TAN, 
00000240: 2020 2020 2043 5f46 4f52 4553 542c 2020       C_FOREST,  
00000250: 2043 5f41 5155 412c 0a20 2020 2043 5f53   C_AQUA,.    C_S
00000260: 414c 4d4f 4e2c 2020 2043 5f50 5552 504c  ALMON,   C_PURPL
00000270: 452c 2020 2043 5f4f 5241 4e47 452c 2020  E,   C_ORANGE,  
00000280: 2043 5f47 5245 590a 7d3b 0a0a 0a77 6f72   C_GREY.};...wor
00000290: 6420 2a74 696d 6572 4164 6472 6573 733b  d *timerAddress;
000002a0: 0a42 4f4f 4c20 6973 436f 436f 333b 0a0a  .BOOL isCoCo3;..
000002b0: 0a73 7461 7469 6320 766f 6964 0a73 6c65  .static void.sle
000002c0: 6570 5469 636b 7328 776f 7264 206e 756d  epTicks(word num
000002d0: 5469 636b 7329 0a7b 0a20 2020 2077 6f72  Ticks).{.    wor
000002e0: 6420 7374 6172 7420 3d20 2a74 696d 6572  d start = *timer
000002f0: 4164 6472 6573 733b 0a20 2020 2077 6869  Address;.    whi
00000300: 6c65 2028 2a74 696d 6572 4164 6472 6573  le (*timerAddres
00000310: 7320 2d20 7374 6172 7420 3c20 6e75 6d54  s - start < numT
00000320: 6963 6b73 290a 2020 2020 2020 2020 3b0a  icks).        ;.
00000330: 7d0a 0a0a 2f2f 2075 7365 3478 3846 6f6e  }...// use4x8Fon
00000340: 743a 2054 5255 4520 746f 2075 7365 2074  t: TRUE to use t
00000350: 6865 2034 7838 2066 6f6e 7420 2867 6976  he 4x8 font (giv
00000360: 6573 2035 3120 636f 6c75 6d6e 7320 696e  es 51 columns in
00000370: 2050 4d4f 4445 2034 2c20 3634 2069 6e20   PMODE 4, 64 in 
00000380: 3332 3078 3139 3220 6d6f 6465 292c 0a2f  320x192 mode),./
00000390: 2f20 2020 2020 2020 2020 2020 2020 4641  /             FA
000003a0: 4c53 4520 746f 2075 7365 2074 6865 2035  LSE to use the 5
000003b0: 7838 2066 6f6e 7420 2867 6976 6573 2034  x8 font (gives 4
000003c0: 3220 636f 6c75 6d6e 7320 696e 2050 4d4f  2 columns in PMO
000003d0: 4445 2034 292e 0a2f 2f20 5265 7475 726e  DE 4)..// Return
000003e0: 7320 5452 5545 2069 6620 7468 6520 7573  s TRUE if the us
000003f0: 6572 2077 616e 7473 2074 6f20 636f 6e74  er wants to cont
00000400: 696e 7565 2074 6f20 7468 6520 6e65 7874  inue to the next
00000410: 2064 656d 6f2e 0a2f 2f20 5265 7475 726e   demo..// Return
00000420: 7320 4641 4c53 4520 6966 2074 6865 2075  s FALSE if the u
00000430: 7365 7220 7072 6573 7365 6420 7468 6520  ser pressed the 
00000440: 4272 6561 6b20 6b65 792e 0a2f 2f0a 7374  Break key..//.st
00000450: 6174 6963 2042 4f4f 4c20 6465 6d6f 436f  atic BOOL demoCo
00000460: 6e74 656e 7473 2842 4f4f 4c20 7573 6534  ntents(BOOL use4
00000470: 7838 466f 6e74 2c20 424f 4f4c 2075 7365  x8Font, BOOL use
00000480: 436f 436f 3353 6372 6565 6e29 0a7b 0a20  CoCo3Screen).{. 
00000490: 2020 2063 6f6e 7374 2062 7974 6520 636f     const byte co
000004a0: 6c73 203d 2028 7573 6534 7838 466f 6e74  ls = (use4x8Font
000004b0: 203f 2028 7573 6543 6f43 6f33 5363 7265   ? (useCoCo3Scre
000004c0: 656e 203f 2036 3420 3a20 3531 2920 3a20  en ? 64 : 51) : 
000004d0: 3432 293b 0a0a 2020 2020 6279 7465 206c  42);..    byte l
000004e0: 696e 6520 3d20 303b 0a20 2020 2063 6861  ine = 0;.    cha
000004f0: 7220 7469 746c 655b 5d20 3d20 2220 4465  r title[] = " De
00000500: 6d6f 206f 6620 2220 5041 434b 4147 4520  mo of " PACKAGE 
00000510: 2220 2220 5645 5253 494f 4e20 2220 223b  " " VERSION " ";
00000520: 2020 2f2f 2074 6865 7365 2049 4473 206d    // these IDs m
00000530: 7573 7420 6265 2064 6566 696e 6564 2062  ust be defined b
00000540: 7920 2d44 206f 6e20 636f 6d70 696c 6572  y -D on compiler
00000550: 2063 6d64 206c 696e 650a 2020 2020 7365   cmd line.    se
00000560: 7449 6e76 6572 7365 5669 6465 6f4d 6f64  tInverseVideoMod
00000570: 6528 5452 5545 293b 0a20 2020 2077 7269  e(TRUE);.    wri
00000580: 7465 4365 6e74 6572 6564 4c69 6e65 286c  teCenteredLine(l
00000590: 696e 652b 2b2c 2074 6974 6c65 293b 0a20  ine++, title);. 
000005a0: 2020 2073 6574 496e 7665 7273 6556 6964     setInverseVid
000005b0: 656f 4d6f 6465 2846 414c 5345 293b 0a20  eoMode(FALSE);. 
000005c0: 2020 206c 696e 652b 2b3b 0a0a 2020 2020     line++;..    
000005d0: 7772 6974 6543 656e 7465 7265 644c 696e  writeCenteredLin
000005e0: 6528 6c69 6e65 2b2b 2c20 224c 6174 696e  e(line++, "Latin
000005f0: 2d31 2028 4953 4f2d 3838 3539 2d31 2920  -1 (ISO-8859-1) 
00000600: 6368 6172 6163 7465 7220 7365 7420 2229  character set ")
00000610: 3b0a 0a20 2020 2063 6861 7220 6465 7363  ;..    char desc
00000620: 5b5d 203d 2020 2020 2020 2020 2020 2020  [] =            
00000630: 2022 6f6e 2061 2035 3178 3234 2073 6f66   "on a 51x24 sof
00000640: 7477 6172 6520 7465 7874 2073 6372 6565  tware text scree
00000650: 6e20 2020 2022 3b0a 0a20 2020 2069 6620  n    ";..    if 
00000660: 2863 6f6c 7320 213d 2035 3129 0a20 2020  (cols != 51).   
00000670: 2020 2020 2064 6573 635b 355d 203d 2027       desc[5] = '
00000680: 3027 202b 2063 6f6c 7320 2f20 3130 2c20  0' + cols / 10, 
00000690: 6465 7363 5b36 5d20 3d20 2730 2720 2b20  desc[6] = '0' + 
000006a0: 636f 6c73 2025 2031 303b 0a20 2020 2077  cols % 10;.    w
000006b0: 7269 7465 4365 6e74 6572 6564 4c69 6e65  riteCenteredLine
000006c0: 286c 696e 652b 2b2c 2064 6573 6329 3b0a  (line++, desc);.
000006d0: 2020 2020 6c69 6e65 2b2b 3b0a 0a20 2020      line++;..   
000006e0: 2063 6f6e 7374 2062 7974 6520 6c65 6674   const byte left
000006f0: 436f 6c20 3d20 2863 6f6c 7320 2d20 3335  Col = (cols - 35
00000700: 2920 2f20 323b 0a0a 2020 2020 2f2f 2044  ) / 2;..    // D
00000710: 6973 706c 6179 2061 2030 2c20 312c 2032  isplay a 0, 1, 2
00000720: 2c20 2e2e 2e2c 2045 2c20 4620 726f 7720  , ..., E, F row 
00000730: 6174 2074 6865 2074 6f70 206f 6620 7468  at the top of th
00000740: 6520 6368 6172 6163 7461 626c 6520 7461  e charactable ta
00000750: 626c 652e 0a20 2020 202f 2f0a 2020 2020  ble..    //.    
00000760: 6d6f 7665 4375 7273 6f72 286c 6566 7443  moveCursor(leftC
00000770: 6f6c 202b 2033 2c20 6c69 6e65 293b 0a20  ol + 3, line);. 
00000780: 2020 2066 6f72 2028 6279 7465 206a 203d     for (byte j =
00000790: 2030 3b20 6a20 3c20 3136 3b20 2b2b 6a29   0; j < 16; ++j)
000007a0: 0a20 2020 207b 0a20 2020 2020 2020 2077  .    {.        w
000007b0: 7269 7465 4368 6172 286a 203c 2031 3020  riteChar(j < 10 
000007c0: 3f20 2730 2720 2b20 6a20 3a20 2741 2720  ? '0' + j : 'A' 
000007d0: 2b20 286a 202d 2031 3029 293b 0a20 2020  + (j - 10));.   
000007e0: 2020 2020 2077 7269 7465 4368 6172 2827       writeChar('
000007f0: 2027 293b 0a20 2020 207d 0a20 2020 206c   ');.    }.    l
00000800: 696e 652b 2b3b 0a20 2020 206d 6f76 6543  ine++;.    moveC
00000810: 7572 736f 7228 6c65 6674 436f 6c20 2b20  ursor(leftCol + 
00000820: 332c 206c 696e 6529 3b0a 2020 2020 7072  3, line);.    pr
00000830: 696e 7466 2822 2d20 2d20 2d20 2d20 2d20  intf("- - - - - 
00000840: 2d20 2d20 2d20 2d20 2d20 2d20 2d20 2d20  - - - - - - - - 
00000850: 2d20 2d20 2d22 293b 0a20 2020 206c 696e  - - -");.    lin
00000860: 652b 2b3b 0a0a 2020 2020 2f2f 2044 6973  e++;..    // Dis
00000870: 706c 6179 2072 6f77 7320 322e 2e37 2c20  play rows 2..7, 
00000880: 3130 2e2e 3135 206f 6620 6368 6172 6163  10..15 of charac
00000890: 7465 7220 7461 626c 6520 2863 6f64 6520  ter table (code 
000008a0: 706f 696e 7473 2033 322e 2e31 3237 2c20  points 32..127, 
000008b0: 3136 302e 2e32 3535 292e 0a20 2020 202f  160..255)..    /
000008c0: 2f0a 2020 2020 666f 7220 2862 7974 6520  /.    for (byte 
000008d0: 6920 3d20 323b 2069 203c 2031 363b 202b  i = 2; i < 16; +
000008e0: 2b69 2c20 2b2b 6c69 6e65 290a 2020 2020  +i, ++line).    
000008f0: 7b0a 2020 2020 2020 2020 6d6f 7665 4375  {.        moveCu
00000900: 7273 6f72 286c 6566 7443 6f6c 2c20 6c69  rsor(leftCol, li
00000910: 6e65 293b 0a20 2020 2020 2020 2070 7269  ne);.        pri
00000920: 6e74 6628 2225 583a 2022 2c20 6929 3b0a  ntf("%X: ", i);.
00000930: 2020 2020 2020 2020 6966 2028 6920 3d3d          if (i ==
00000940: 2038 207c 7c20 6920 3d3d 2039 2920 202f   8 || i == 9)  /
00000950: 2f20 666f 6e74 2068 6173 206e 6f20 6368  / font has no ch
00000960: 6172 7320 746f 2064 6973 706c 6179 2069  ars to display i
00000970: 6e20 3132 382e 2e31 3539 2072 616e 6765  n 128..159 range
00000980: 0a20 2020 2020 2020 2020 2020 2063 6f6e  .            con
00000990: 7469 6e75 653b 0a20 2020 2020 2020 2062  tinue;.        b
000009a0: 7974 6520 6869 6768 4920 3d20 6920 3c3c  yte highI = i <<
000009b0: 2034 3b0a 2020 2020 2020 2020 666f 7220   4;.        for 
000009c0: 2862 7974 6520 6a20 3d20 303b 206a 203c  (byte j = 0; j <
000009d0: 2031 363b 202b 2b6a 290a 2020 2020 2020   16; ++j).      
000009e0: 2020 7b0a 2020 2020 2020 2020 2020 2020    {.            
000009f0: 7772 6974 6543 6861 7228 6869 6768 4920  writeChar(highI 
00000a00: 7c20 6a29 3b0a 2020 2020 2020 2020 2020  | j);.          
00000a10: 2020 7772 6974 6543 6861 7228 2720 2729    writeChar(' ')
00000a20: 3b0a 2020 2020 2020 2020 7d0a 2020 2020  ;.        }.    
00000a30: 7d0a 2020 2020 0a20 2020 202f 2f20 4669  }.    .    // Fi
00000a40: 6c6c 2074 6865 206c 6566 746d 6f73 7420  ll the leftmost 
00000a50: 616e 6420 7269 6768 746d 6f73 7420 636f  and rightmost co
00000a60: 6c75 6d6e 733a 0a20 2020 202f 2f0a 2020  lumns:.    //.  
00000a70: 2020 666f 7220 2862 7974 6520 7920 3d20    for (byte y = 
00000a80: 303b 2079 203c 2032 343b 202b 2b79 290a  0; y < 24; ++y).
00000a90: 2020 2020 7b0a 2020 2020 2020 2020 7772      {.        wr
00000aa0: 6974 6543 6861 7241 7428 302c 2079 2c20  iteCharAt(0, y, 
00000ab0: 272a 2729 3b0a 2020 2020 2020 2020 7772  '*');.        wr
00000ac0: 6974 6543 6861 7241 7428 636f 6c73 202d  iteCharAt(cols -
00000ad0: 2031 2c20 792c 2027 2a27 293b 0a20 2020   1, y, '*');.   
00000ae0: 207d 0a0a 2020 2020 2f2f 2053 686f 7720   }..    // Show 
00000af0: 6120 7072 6f6d 7074 2074 776f 206c 696e  a prompt two lin
00000b00: 6573 2062 656c 6f77 2074 6865 2074 6162  es below the tab
00000b10: 6c65 3a0a 2020 2020 2f2f 0a20 2020 206c  le:.    //.    l
00000b20: 696e 652b 2b3b 0a20 2020 2073 6574 426f  ine++;.    setBo
00000b30: 6c64 4d6f 6465 2854 5255 4529 3b0a 2020  ldMode(TRUE);.  
00000b40: 2020 7772 6974 6543 656e 7465 7265 644c    writeCenteredL
00000b50: 696e 6528 6c69 6e65 2c20 2250 7265 7373  ine(line, "Press
00000b60: 2061 206b 6579 2074 6f20 636f 6e74 696e   a key to contin
00000b70: 7565 3a20 2229 3b0a 2020 2020 7365 7442  ue: ");.    setB
00000b80: 6f6c 644d 6f64 6528 4641 4c53 4529 3b0a  oldMode(FALSE);.
00000b90: 0a20 2020 2069 6620 2877 6169 744b 6579  .    if (waitKey
00000ba0: 426c 696e 6b69 6e67 4375 7273 6f72 2829  BlinkingCursor()
00000bb0: 203d 3d20 4252 4541 4b29 0a20 2020 2020   == BREAK).     
00000bc0: 2020 2072 6574 7572 6e20 4641 4c53 453b     return FALSE;
00000bd0: 0a0a 2020 2020 2f2f 2044 656d 6f6e 7374  ..    // Demonst
00000be0: 7261 7465 2070 7269 6e74 6628 2920 616e  rate printf() an
00000bf0: 6420 6175 746f 6d61 7469 6320 7363 726f  d automatic scro
00000c00: 6c6c 696e 673a 0a20 2020 202f 2f0a 2020  lling:.    //.  
00000c10: 2020 7072 696e 7466 2822 5c30 3333 4522    printf("\033E"
00000c20: 293b 2020 2f2f 2063 6c65 6172 2073 6372  );  // clear scr
00000c30: 6565 6e0a 2020 2020 666f 7220 2862 7974  een.    for (byt
00000c40: 6520 6920 3d20 303b 2069 203c 2032 363b  e i = 0; i < 26;
00000c50: 202b 2b69 290a 2020 2020 7b0a 2020 2020   ++i).    {.    
00000c60: 2020 2020 7072 696e 7466 2822 2563 5c6e      printf("%c\n
00000c70: 222c 2027 4127 202b 2069 293b 0a20 2020  ", 'A' + i);.   
00000c80: 2020 2020 2073 6c65 6570 5469 636b 7328       sleepTicks(
00000c90: 3329 3b0a 2020 2020 7d0a 0a20 2020 2070  3);.    }..    p
00000ca0: 7269 6e74 6628 225c 6e22 2254 6865 2073  rintf("\n""The s
00000cb0: 6372 6565 6e20 7363 726f 6c6c 7320 6175  creen scrolls au
00000cc0: 746f 6d61 7469 6361 6c6c 795c 6e22 0a20  tomatically\n". 
00000cd0: 2020 2020 2020 2020 2020 2020 2020 2277                "w
00000ce0: 6865 6e20 7468 6520 6375 7273 6f72 2072  hen the cursor r
00000cf0: 6561 6368 6573 2074 6865 2062 6f74 746f  eaches the botto
00000d00: 6d2e 5c6e 5c6e 2229 3b0a 0a20 2020 2077  m.\n\n");..    w
00000d10: 7269 7465 5374 7269 6e67 2822 5072 6573  riteString("Pres
00000d20: 7320 6120 6b65 7920 746f 2063 6f6e 7469  s a key to conti
00000d30: 6e75 653a 2022 293b 0a20 2020 2069 6620  nue: ");.    if 
00000d40: 2877 6169 744b 6579 426c 696e 6b69 6e67  (waitKeyBlinking
00000d50: 4375 7273 6f72 2829 203d 3d20 4252 4541  Cursor() == BREA
00000d60: 4b29 0a20 2020 2020 2020 2072 6574 7572  K).        retur
00000d70: 6e20 4641 4c53 453b 0a0a 2020 2020 2f2f  n FALSE;..    //
00000d80: 2056 5435 3220 6465 6d6f 2076 6961 2070   VT52 demo via p
00000d90: 7269 6e74 6628 2920 2877 7269 7465 5374  rintf() (writeSt
00000da0: 7269 6e67 2829 2064 6f65 7320 6e6f 7420  ring() does not 
00000db0: 676f 0a20 2020 202f 2f20 7468 726f 7567  go.    // throug
00000dc0: 6820 7072 6f63 6573 7356 5435 3228 2929  h processVT52())
00000dd0: 2e20 4865 7265 2c20 7765 2063 6c65 6172  . Here, we clear
00000de0: 2074 6865 2073 6372 6565 6e0a 2020 2020   the screen.    
00000df0: 2f2f 2077 6974 686f 7574 2063 6c72 7363  // without clrsc
00000e00: 7228 292e 0a20 2020 202f 2f0a 2020 2020  r()..    //.    
00000e10: 7072 696e 7466 2822 5c78 3142 4822 293b  printf("\x1BH");
00000e20: 2020 2f2f 2063 7572 736f 7220 746f 2068    // cursor to h
00000e30: 6f6d 650a 2020 2020 7072 696e 7466 2822  ome.    printf("
00000e40: 5c78 3142 4a22 293b 2020 2f2f 2065 7261  \x1BJ");  // era
00000e50: 7365 2074 6f20 656e 6420 6f66 2073 6372  se to end of scr
00000e60: 6565 6e0a 2020 2020 7072 696e 7466 2822  een.    printf("
00000e70: 5468 6520 7363 7265 656e 2068 6173 206a  The screen has j
00000e80: 7573 7420 6265 656e 2063 6c65 6172 6564  ust been cleared
00000e90: 2077 6974 6820 7468 655c 6e22 0a20 2020   with the\n".   
00000ea0: 2020 2020 2020 2020 2256 5435 3220 7365          "VT52 se
00000eb0: 7175 656e 6365 203c 4553 433e 2048 203c  quence <ESC> H <
00000ec0: 4553 433e 204a 2e5c 6e22 0a20 2020 2020  ESC> J.\n".     
00000ed0: 2020 2020 2020 225c 6e22 0a20 2020 2020        "\n".     
00000ee0: 2020 2020 2020 225c 7831 4270 5468 6973        "\x1BpThis
00000ef0: 2070 6172 7420 6973 2069 6e76 6572 7465   part is inverte
00000f00: 645c 7831 4271 2062 6563 6175 7365 5c6e  d\x1Bq because\n
00000f10: 220a 2020 2020 2020 2020 2020 2022 6f66  ".           "of
00000f20: 2056 5435 3220 7365 7175 656e 6365 7320   VT52 sequences 
00000f30: 3c45 5343 3e20 7020 616e 6420 3c45 5343  <ESC> p and <ESC
00000f40: 3e20 712e 2229 3b0a 0a20 2020 206c 696e  > q.");..    lin
00000f50: 6520 3d20 373b 0a20 2020 2062 7974 6520  e = 7;.    byte 
00000f60: 636f 6c20 3d20 3130 3b0a 2020 2020 6d6f  col = 10;.    mo
00000f70: 7665 4375 7273 6f72 2863 6f6c 2c20 6c69  veCursor(col, li
00000f80: 6e65 293b 0a20 2020 2070 7269 6e74 6628  ne);.    printf(
00000f90: 2254 6869 7320 6c69 6e65 2073 7461 7274  "This line start
00000fa0: 7320 6174 2063 6f6c 756d 6e20 2575 5c6e  s at column %u\n
00000fb0: 220a 2020 2020 2020 2020 2020 2022 6f66  ".           "of
00000fc0: 206c 696e 6520 2575 2062 6563 6175 7365   line %u because
00000fd0: 206f 6620 6d6f 7665 4375 7273 6f72 2829   of moveCursor()
00000fe0: 2e5c 6e22 2c20 636f 6c2c 206c 696e 6529  .\n", col, line)
00000ff0: 3b0a 0a20 2020 2070 7269 6e74 6628 225c  ;..    printf("\
00001000: 7831 4259 5c78 3242 5c78 3235 5468 6973  x1BY\x2B\x25This
00001010: 206c 696e 6520 7374 6172 7473 2061 7420   line starts at 
00001020: 636f 6c75 6d6e 2035 5c6e 220a 2020 2020  column 5\n".    
00001030: 2020 2020 2020 2022 6f66 206c 696e 6520         "of line 
00001040: 3131 2062 6563 6175 7365 206f 6620 5654  11 because of VT
00001050: 3532 2073 6571 7565 6e63 655c 6e22 0a20  52 sequence\n". 
00001060: 2020 2020 2020 2020 2020 223c 4553 433e            "<ESC>
00001070: 2059 203c 726f 773e 203c 636f 6c75 6d6e   Y <row> <column
00001080: 3e2e 5c6e 2229 3b0a 0a20 2020 206d 6f76  >.\n");..    mov
00001090: 6543 7572 736f 7228 302c 2031 3529 3b0a  eCursor(0, 15);.
000010a0: 2020 2020 7072 696e 7466 2822 5468 6973      printf("This
000010b0: 206c 696e 6520 636f 6e74 6169 6e73 2061   line contains a
000010c0: 6e20 2229 3b0a 2020 2020 7365 7449 6e76  n ");.    setInv
000010d0: 6572 7365 5669 6465 6f4d 6f64 6528 5452  erseVideoMode(TR
000010e0: 5545 293b 0a20 2020 2070 7269 6e74 6628  UE);.    printf(
000010f0: 2269 6e76 6572 7465 6422 293b 0a20 2020  "inverted");.   
00001100: 2073 6574 496e 7665 7273 6556 6964 656f   setInverseVideo
00001110: 4d6f 6465 2846 414c 5345 293b 0a20 2020  Mode(FALSE);.   
00001120: 2070 7269 6e74 6628 2220 776f 7264 5c6e   printf(" word\n
00001130: 220a 2020 2020 2020 2020 2020 2022 616e  ".           "an
00001140: 6420 6120 2229 3b0a 2020 2020 7365 7442  d a ");.    setB
00001150: 6f6c 644d 6f64 6528 5452 5545 293b 0a20  oldMode(TRUE);. 
00001160: 2020 2070 7269 6e74 6628 2262 6f6c 6422     printf("bold"
00001170: 293b 0a20 2020 2073 6574 426f 6c64 4d6f  );.    setBoldMo
00001180: 6465 2846 414c 5345 293b 0a20 2020 2070  de(FALSE);.    p
00001190: 7269 6e74 6628 2220 6f6e 6520 6265 6361  rintf(" one beca
000011a0: 7573 6520 6f66 2066 756e 6374 696f 6e73  use of functions
000011b0: 5c6e 220a 2020 2020 2020 2020 2020 2022  \n".           "
000011c0: 7365 7449 6e76 6572 7365 5669 6465 6f4d  setInverseVideoM
000011d0: 6f64 6528 2920 616e 6420 7365 7442 6f6c  ode() and setBol
000011e0: 644d 6f64 6528 292e 2229 3b0a 0a20 2020  dMode().");..   
000011f0: 206c 696e 6520 3d20 3139 3b0a 2020 2020   line = 19;.    
00001200: 636f 6e73 7420 6368 6172 202a 7072 6f6d  const char *prom
00001210: 7074 3020 3d20 2254 6865 2063 7572 736f  pt0 = "The curso
00001220: 7220 6361 6e20 626c 696e 6b20 6f76 6572  r can blink over
00001230: 2074 6578 742e 223b 0a20 2020 2063 6f6e   text.";.    con
00001240: 7374 2063 6861 7220 2a70 726f 6d70 7431  st char *prompt1
00001250: 203d 2022 5072 6573 7320 6120 6b65 7920   = "Press a key 
00001260: 746f 2063 6f6e 7469 6e75 652e 223b 0a20  to continue.";. 
00001270: 2020 2063 6f6c 203d 2030 3b0a 2020 2020     col = 0;.    
00001280: 6d6f 7665 4375 7273 6f72 2863 6f6c 2c20  moveCursor(col, 
00001290: 6c69 6e65 293b 0a20 2020 2077 7269 7465  line);.    write
000012a0: 5374 7269 6e67 2870 726f 6d70 7430 293b  String(prompt0);
000012b0: 0a20 2020 206d 6f76 6543 7572 736f 7228  .    moveCursor(
000012c0: 636f 6c2c 206c 696e 6520 2b20 3129 3b0a  col, line + 1);.
000012d0: 2020 2020 7772 6974 6553 7472 696e 6728      writeString(
000012e0: 7072 6f6d 7074 3129 3b0a 2020 2020 6d6f  prompt1);.    mo
000012f0: 7665 4375 7273 6f72 2863 6f6c 202b 2032  veCursor(col + 2
00001300: 312c 206c 696e 6529 3b20 202f 2f20 6d6f  1, line);  // mo
00001310: 7665 2074 6f20 276f 2720 6f66 2022 6f76  ve to 'o' of "ov
00001320: 6572 220a 0a20 2020 2069 6620 2877 6169  er"..    if (wai
00001330: 744b 6579 426c 696e 6b69 6e67 4375 7273  tKeyBlinkingCurs
00001340: 6f72 2829 203d 3d20 4252 4541 4b29 0a20  or() == BREAK). 
00001350: 2020 2020 2020 2072 6574 7572 6e20 4641         return FA
00001360: 4c53 453b 0a0a 2020 2020 2f2f 2044 656d  LSE;..    // Dem
00001370: 6f20 7468 6520 6265 6c6c 2063 6861 7261  o the bell chara
00001380: 6374 6572 2e0a 2020 2020 2f2f 0a20 2020  cter..    //.   
00001390: 2063 6c72 7363 7228 293b 0a20 2020 2062   clrscr();.    b
000013a0: 7974 6520 6c65 6e20 3d20 3236 2c20 7820  yte len = 26, x 
000013b0: 3d20 2863 6f6c 7320 2d20 6c65 6e29 202f  = (cols - len) /
000013c0: 2032 3b0a 2020 2020 6d6f 7665 4375 7273   2;.    moveCurs
000013d0: 6f72 2878 2c20 3130 293b 0a20 2020 2070  or(x, 10);.    p
000013e0: 7269 6e74 6628 2241 2073 6f75 6e64 5c61  rintf("A sound\a
000013f0: 2063 616e 2062 6520 706c 6179 6564 2077   can be played w
00001400: 6865 6e20 2229 3b0a 2020 2020 6d6f 7665  hen ");.    move
00001410: 4375 7273 6f72 2878 2c20 3131 293b 0a20  Cursor(x, 11);. 
00001420: 2020 2070 7269 6e74 6628 2263 6861 7261     printf("chara
00001430: 6374 6572 2037 2069 7320 7072 696e 7465  cter 7 is printe
00001440: 642e 2229 3b0a 2020 2020 6d6f 7665 4375  d.");.    moveCu
00001450: 7273 6f72 2878 2c20 3133 293b 0a20 2020  rsor(x, 13);.   
00001460: 2070 7269 6e74 6628 2250 7265 7373 2061   printf("Press a
00001470: 206b 6579 2074 6f20 636f 6e74 696e 7565   key to continue
00001480: 3a20 2229 3b0a 0a20 2020 2069 6620 2877  : ");..    if (w
00001490: 6169 744b 6579 426c 696e 6b69 6e67 4375  aitKeyBlinkingCu
000014a0: 7273 6f72 2829 203d 3d20 4252 4541 4b29  rsor() == BREAK)
000014b0: 0a20 2020 2020 2020 2072 6574 7572 6e20  .        return 
000014c0: 4641 4c53 453b 0a0a 2020 2020 6966 2028  FALSE;..    if (
000014d0: 7573 6543 6f43 6f33 5363 7265 656e 290a  useCoCo3Screen).
000014e0: 2020 2020 7b0a 2020 2020 2020 2020 2f2f      {.        //
000014f0: 2044 656d 6f20 7468 6520 636f 6c6f 7273   Demo the colors
00001500: 206f 6e20 7468 6520 436f 436f 2033 2e0a   on the CoCo 3..
00001510: 2020 2020 2020 2020 2f2f 0a20 2020 2020          //.     
00001520: 2020 2073 6574 4261 636b 6772 6f75 6e64     setBackground
00001530: 436f 6c6f 7228 435f 424c 4143 4b29 3b0a  Color(C_BLACK);.
00001540: 2020 2020 2020 2020 7365 7446 6f72 6567          setForeg
00001550: 726f 756e 6443 6f6c 6f72 2843 5f59 454c  roundColor(C_YEL
00001560: 4c4f 5729 3b0a 2020 2020 2020 2020 636c  LOW);.        cl
00001570: 7273 6372 2829 3b0a 2020 2020 2020 2020  rscr();.        
00001580: 7772 6974 6543 656e 7465 7265 644c 696e  writeCenteredLin
00001590: 6528 312c 2022 2046 756e 6374 696f 6e73  e(1, " Functions
000015a0: 2073 6574 466f 7265 6772 6f75 6e64 436f   setForegroundCo
000015b0: 6c6f 7228 2920 616e 6420 7365 7442 6163  lor() and setBac
000015c0: 6b67 726f 756e 6443 6f6c 6f72 2829 2061  kgroundColor() a
000015d0: 6c6c 6f77 2229 3b0a 2020 2020 2020 2020  llow");.        
000015e0: 7772 6974 6543 656e 7465 7265 644c 696e  writeCenteredLin
000015f0: 6528 322c 2022 2061 2063 686f 6963 6520  e(2, " a choice 
00001600: 616d 6f6e 6720 3136 2063 6f6c 6f72 732e  among 16 colors.
00001610: 2048 6572 6520 6172 6520 736f 6d65 2072   Here are some r
00001620: 616e 646f 6d20 636f 6d62 696e 6174 696f  andom combinatio
00001630: 6e73 2e20 2229 3b0a 2020 2020 2020 2020  ns. ");.        
00001640: 7772 6974 6543 656e 7465 7265 644c 696e  writeCenteredLin
00001650: 6528 332c 2022 2054 6865 2043 6f43 6f20  e(3, " The CoCo 
00001660: 3327 7320 7061 6c65 7474 6520 616c 6c6f  3's palette allo
00001670: 7773 2066 7572 7468 6572 2063 7573 746f  ws further custo
00001680: 6d69 7a61 7469 6f6e 2e20 2020 2020 2020  mization.       
00001690: 2020 2020 2229 3b0a 2020 2020 2020 2020      ");.        
000016a0: 6279 7465 206c 6566 7420 3d20 322c 2074  byte left = 2, t
000016b0: 6f70 203d 2035 3b0a 2020 2020 2020 2020  op = 5;.        
000016c0: 666f 7220 2862 7974 6520 636f 6c20 3d20  for (byte col = 
000016d0: 303b 2063 6f6c 203c 3d20 373b 202b 2b63  0; col <= 7; ++c
000016e0: 6f6c 290a 2020 2020 2020 2020 7b0a 2020  ol).        {.  
000016f0: 2020 2020 2020 2020 2020 6279 7465 2062            byte b
00001700: 6743 6f6c 6f72 203d 2063 6f6c 202b 2038  gColor = col + 8
00001710: 3b0a 2020 2020 2020 2020 2020 2020 7365  ;.            se
00001720: 7442 6163 6b67 726f 756e 6443 6f6c 6f72  tBackgroundColor
00001730: 2862 6743 6f6c 6f72 293b 0a20 2020 2020  (bgColor);.     
00001740: 2020 2020 2020 2066 6f72 2028 6279 7465         for (byte
00001750: 2072 6f77 203d 2030 3b20 726f 7720 3c3d   row = 0; row <=
00001760: 2037 3b20 2b2b 726f 7729 0a20 2020 2020   7; ++row).     
00001770: 2020 2020 2020 207b 0a20 2020 2020 2020         {.       
00001780: 2020 2020 2020 2020 2062 7974 6520 6667           byte fg
00001790: 436f 6c6f 7220 3d20 726f 773b 0a20 2020  Color = row;.   
000017a0: 2020 2020 2020 2020 2020 2020 2073 6574               set
000017b0: 466f 7265 6772 6f75 6e64 436f 6c6f 7228  ForegroundColor(
000017c0: 6667 436f 6c6f 7229 3b0a 2020 2020 2020  fgColor);.      
000017d0: 2020 2020 2020 2020 2020 6d6f 7665 4375            moveCu
000017e0: 7273 6f72 286c 6566 7420 2b20 636f 6c20  rsor(left + col 
000017f0: 2a20 382c 2074 6f70 202b 2072 6f77 202a  * 8, top + row *
00001800: 2032 293b 0a20 2020 2020 2020 2020 2020   2);.           
00001810: 2020 2020 2070 7269 6e74 6628 2225 3275       printf("%2u
00001820: 3a25 3275 222c 2066 6743 6f6c 6f72 2c20  :%2u", fgColor, 
00001830: 6267 436f 6c6f 7229 3b0a 2020 2020 2020  bgColor);.      
00001840: 2020 2020 2020 7d0a 2020 2020 2020 2020        }.        
00001850: 7d0a 0a20 2020 2020 2020 2073 6574 4261  }..        setBa
00001860: 636b 6772 6f75 6e64 436f 6c6f 7228 435f  ckgroundColor(C_
00001870: 424c 4143 4b29 3b0a 2020 2020 2020 2020  BLACK);.        
00001880: 7365 7446 6f72 6567 726f 756e 6443 6f6c  setForegroundCol
00001890: 6f72 2843 5f59 454c 4c4f 5729 3b0a 2020  or(C_YELLOW);.  
000018a0: 2020 2020 2020 7772 6974 6543 656e 7465        writeCente
000018b0: 7265 644c 696e 6528 3231 2c20 2250 7265  redLine(21, "Pre
000018c0: 7373 2061 206b 6579 2074 6f20 636f 6e74  ss a key to cont
000018d0: 696e 7565 3a20 2229 3b0a 0a20 2020 2020  inue: ");..     
000018e0: 2020 2069 6620 2877 6169 744b 6579 426c     if (waitKeyBl
000018f0: 696e 6b69 6e67 4375 7273 6f72 2829 203d  inkingCursor() =
00001900: 3d20 4252 4541 4b29 0a20 2020 2020 2020  = BREAK).       
00001910: 2020 2020 2072 6574 7572 6e20 4641 4c53       return FALS
00001920: 453b 0a20 2020 207d 0a0a 2020 2020 7265  E;.    }..    re
00001930: 7475 726e 2054 5255 453b 0a7d 0a0a 0a23  turn TRUE;.}...#
00001940: 6966 6465 6620 4f53 3920 202f 2a20 4b65  ifdef OS9  /* Ke
00001950: 7962 6f61 7264 2073 7570 706f 7274 2e20  yboard support. 
00001960: 2a2f 0a0a 0a23 696e 636c 7564 6520 224b  */...#include "K
00001970: 6579 626f 6172 642e 6822 2020 2f2a 2062  eyboard.h"  /* b
00001980: 636f 6e74 726f 6c20 6c69 6272 6172 7920  control library 
00001990: 2a2f 0a0a 7374 6174 6963 204b 6579 626f  */..static Keybo
000019a0: 6172 6420 7468 654b 6579 626f 6172 643b  ard theKeyboard;
000019b0: 0a0a 2f2f 2046 6f72 2048 6952 6573 5465  ..// For HiResTe
000019c0: 7874 5363 7265 656e 496e 6974 323a 3a69  xtScreenInit2::i
000019d0: 6e6b 6579 4675 6e63 5074 722e 0a2f 2f0a  nkeyFuncPtr..//.
000019e0: 7374 6174 6963 2062 7974 6520 706f 6c6c  static byte poll
000019f0: 4243 6f6e 7472 6f6c 4b65 7962 6f61 7264  BControlKeyboard
00001a00: 2829 0a7b 0a20 2020 2062 7974 6520 6368  ().{.    byte ch
00001a10: 203d 204b 6579 626f 6172 645f 706f 6c6c   = Keyboard_poll
00001a20: 2826 7468 654b 6579 626f 6172 6429 3b0a  (&theKeyboard);.
00001a30: 2020 2020 6966 2028 6368 203d 3d20 2721      if (ch == '!
00001a40: 2729 2020 2f2f 2070 6174 6368 2062 2f63  ')  // patch b/c
00001a50: 2043 7472 6c2d 432f 4374 726c 2d45 2f42   Ctrl-C/Ctrl-E/B
00001a60: 7265 616b 2064 6f20 6e6f 7420 7265 7475  reak do not retu
00001a70: 726e 2063 6f64 6520 3320 6f6e 204f 532d  rn code 3 on OS-
00001a80: 390a 2020 2020 2020 2020 7265 7475 726e  9.        return
00001a90: 2042 5245 414b 3b0a 2020 2020 7265 7475   BREAK;.    retu
00001aa0: 726e 2063 683b 0a7d 0a0a 0a2f 2f20 6672  rn ch;.}...// fr
00001ab0: 6571 7565 6e63 793a 2030 3d6c 6f77 2c20  equency: 0=low, 
00001ac0: 3430 3935 3d68 6967 682e 0a2f 2f20 6475  4095=high..// du
00001ad0: 7261 7469 6f6e 3a20 302e 2e32 3535 2e0a  ration: 0..255..
00001ae0: 2f2f 2061 6d70 6c69 7475 6465 3a20 302e  // amplitude: 0.
00001af0: 2e36 332e 0a2f 2f0a 7374 6174 6963 2076  .63..//.static v
00001b00: 6f69 6420 706c 6179 546f 6e65 2877 6f72  oid playTone(wor
00001b10: 6420 6672 6571 7565 6e63 792c 2062 7974  d frequency, byt
00001b20: 6520 6475 7261 7469 6f6e 2c20 6279 7465  e duration, byte
00001b30: 2061 6d70 6c69 7475 6465 290a 7b0a 2020   amplitude).{.  
00001b40: 2020 6173 6d0a 2020 2020 7b0a 2020 2020    asm.    {.    
00001b50: 2020 2020 7073 6873 2020 2020 7920 2020      pshs    y   
00001b60: 2020 2020 3b20 7072 6573 6572 7665 2067      ; preserve g
00001b70: 6c6f 6261 6c20 6461 7461 2070 6f69 6e74  lobal data point
00001b80: 6572 0a20 2020 2020 2020 206c 6461 2020  er.        lda  
00001b90: 2020 203a 616d 706c 6974 7564 650a 2020     :amplitude.  
00001ba0: 2020 2020 2020 6c64 6220 2020 2020 3a64        ldb     :d
00001bb0: 7572 6174 696f 6e0a 2020 2020 2020 2020  uration.        
00001bc0: 7466 7220 2020 2020 642c 780a 2020 2020  tfr     d,x.    
00001bd0: 2020 2020 6c64 6420 2020 2020 2324 3031      ldd     #$01
00001be0: 3938 2020 3b20 3120 3d20 7061 7468 206e  98  ; 1 = path n
00001bf0: 756d 6265 722c 2024 3938 203d 2053 532e  umber, $98 = SS.
00001c00: 546f 6e65 2066 756e 6374 696f 6e20 6e75  Tone function nu
00001c10: 6d62 6572 0a20 2020 2020 2020 206c 6479  mber.        ldy
00001c20: 2020 2020 203a 6672 6571 7565 6e63 790a       :frequency.
00001c30: 2020 2020 2020 2020 6f73 3920 2020 2020          os9     
00001c40: 2438 4520 2020 2020 3b20 4924 5365 7453  $8E     ; I$SetS
00001c50: 7474 2028 5365 7420 5374 6174 7573 290a  tt (Set Status).
00001c60: 2020 2020 2020 2020 7075 6c73 2020 2020          puls    
00001c70: 790a 2020 2020 7d0a 7d0a 0a0a 7374 6174  y.    }.}...stat
00001c80: 6963 2076 6f69 6420 706c 6179 4f53 3942  ic void playOS9B
00001c90: 656c 6c28 766f 6964 290a 7b0a 2020 2020  ell(void).{.    
00001ca0: 706c 6179 546f 6e65 2833 3037 322c 2038  playTone(3072, 8
00001cb0: 2c20 3438 293b 0a7d 0a0a 0a23 656e 6469  , 48);.}...#endi
00001cc0: 6620 202f 2a20 4f53 3920 2a2f 0a0a 0a23  f  /* OS9 */...#
00001cd0: 6966 2064 6566 696e 6564 285f 434f 434f  if defined(_COCO
00001ce0: 5f42 4153 4943 5f29 207c 7c20 6465 6669  _BASIC_) || defi
00001cf0: 6e65 6428 4452 4147 4f4e 290a 0a0a 2f2f  ned(DRAGON)...//
00001d00: 2053 6574 7570 2061 6e64 2073 686f 7720   Setup and show 
00001d10: 6120 504d 4f44 4520 3420 6772 6565 6e2f  a PMODE 4 green/
00001d20: 626c 6163 6b20 6772 6170 6869 6373 2073  black graphics s
00001d30: 6372 6565 6e2e 0a2f 2f0a 7374 6174 6963  creen..//.static
00001d40: 2076 6f69 6420 7368 6f77 504d 6f64 6534   void showPMode4
00001d50: 5363 7265 656e 4174 4275 6666 6572 2862  ScreenAtBuffer(b
00001d60: 7974 6520 2a73 6372 6565 6e42 7566 6665  yte *screenBuffe
00001d70: 7229 0a7b 0a20 2020 2077 6964 7468 2833  r).{.    width(3
00001d80: 3229 3b20 202f 2f20 504d 4f44 4520 6772  2);  // PMODE gr
00001d90: 6170 6869 6373 2077 696c 6c20 6f6e 6c79  aphics will only
00001da0: 2061 7070 6561 7220 6672 6f6d 2033 3278   appear from 32x
00001db0: 3136 2028 646f 6573 206e 6f74 6869 6e67  16 (does nothing
00001dc0: 206f 6e20 436f 436f 2031 2632 290a 2020   on CoCo 1&2).  
00001dd0: 2020 706d 6f64 6528 342c 2073 6372 6565    pmode(4, scree
00001de0: 6e42 7566 6665 7229 3b0a 2020 2020 7063  nBuffer);.    pc
00001df0: 6c73 2832 3535 293b 0a20 2020 2073 6372  ls(255);.    scr
00001e00: 6565 6e28 312c 2030 293b 2020 2f2f 2067  een(1, 0);  // g
00001e10: 7265 656e 2f62 6c61 636b 0a7d 0a0a 0a23  reen/black.}...#
00001e20: 656e 6469 660a 0a0a 2369 6664 6566 205f  endif...#ifdef _
00001e30: 434f 434f 5f42 4153 4943 5f20 202f 2a20  COCO_BASIC_  /* 
00001e40: 436f 436f 2033 2073 7570 706f 7274 2e20  CoCo 3 support. 
00001e50: 2a2f 0a0a 0a2f 2f20 5468 6520 666f 6c6c  */...// The foll
00001e60: 6f77 696e 6720 6b65 7962 6f61 7264 2073  owing keyboard s
00001e70: 7973 7465 6d20 6973 2072 7564 696d 656e  ystem is rudimen
00001e80: 7461 7279 2c20 6265 6361 7573 6520 6f66  tary, because of
00001e90: 2074 6865 2061 6273 656e 6365 206f 6620   the absence of 
00001ea0: 436f 6c6f 7220 4261 7369 632e 0a2f 2f20  Color Basic..// 
00001eb0: 4974 206f 6e6c 7920 7375 7070 6f72 7473  It only supports
00001ec0: 2074 6865 2073 7061 6365 2061 6e64 2062   the space and b
00001ed0: 7265 616b 206b 6579 732e 0a2f 2f20 466f  reak keys..// Fo
00001ee0: 7220 6d6f 7265 2063 6f6d 706c 6574 6520  r more complete 
00001ef0: 6b65 7962 6f61 7264 2073 7570 706f 7274  keyboard support
00001f00: 2c20 6f6e 6520 636f 756c 6420 7573 6520  , one could use 
00001f10: 7468 6520 4243 6f6e 7472 6f6c 206c 6962  the BControl lib
00001f20: 7261 7279 2e0a 2f2f 0a74 7970 6564 6566  rary..//.typedef
00001f30: 2073 7472 7563 7420 4b65 7953 7461 7465   struct KeyState
00001f40: 0a7b 0a20 2020 2062 7974 6520 6368 6172  .{.    byte char
00001f50: 5661 6c75 653b 2020 2020 2020 2f2f 2041  Value;      // A
00001f60: 5343 4949 2076 616c 7565 0a20 2020 2062  SCII value.    b
00001f70: 7974 6520 6b65 7950 726f 6265 5661 6c75  yte keyProbeValu
00001f80: 653b 2020 2f2f 204b 4559 5f50 524f 4245  e;  // KEY_PROBE
00001f90: 5f2a 2076 616c 7565 2066 726f 6d20 3c63  _* value from <c
00001fa0: 6f63 6f2e 683e 0a20 2020 2062 7974 6520  oco.h>.    byte 
00001fb0: 6b65 7942 6974 5661 6c75 653b 2020 2020  keyBitValue;    
00001fc0: 2f2f 204b 4559 5f42 4954 5f2a 2076 616c  // KEY_BIT_* val
00001fd0: 7565 2066 726f 6d20 3c63 6f63 6f2e 683e  ue from <coco.h>
00001fe0: 0a20 2020 2042 4f4f 4c20 7761 7350 7265  .    BOOL wasPre
00001ff0: 7373 6564 3b20 2020 2020 2f2f 206d 7573  ssed;     // mus
00002000: 7420 6265 2069 6e69 7469 616c 697a 6564  t be initialized
00002010: 2074 6f20 4641 4c53 450a 7d20 4b65 7953   to FALSE.} KeyS
00002020: 7461 7465 3b0a 0a0a 6279 7465 204b 6579  tate;...byte Key
00002030: 5374 6174 655f 7072 6f63 6573 7328 4b65  State_process(Ke
00002040: 7953 7461 7465 202a 7365 6c66 290a 7b0a  yState *self).{.
00002050: 2020 2020 424f 4f4c 2063 7572 7265 6e6c      BOOL currenl
00002060: 7479 5072 6573 7365 6420 3d20 6973 4b65  tyPressed = isKe
00002070: 7950 7265 7373 6564 2873 656c 662d 3e6b  yPressed(self->k
00002080: 6579 5072 6f62 6556 616c 7565 2c20 7365  eyProbeValue, se
00002090: 6c66 2d3e 6b65 7942 6974 5661 6c75 6529  lf->keyBitValue)
000020a0: 3b0a 2020 2020 424f 4f4c 206a 7573 7450  ;.    BOOL justP
000020b0: 7265 7373 6564 203d 2028 2173 656c 662d  ressed = (!self-
000020c0: 3e77 6173 5072 6573 7365 6420 2626 2063  >wasPressed && c
000020d0: 7572 7265 6e6c 7479 5072 6573 7365 6429  urrenltyPressed)
000020e0: 3b0a 2020 2020 7365 6c66 2d3e 7761 7350  ;.    self->wasP
000020f0: 7265 7373 6564 203d 2063 7572 7265 6e6c  ressed = currenl
00002100: 7479 5072 6573 7365 643b 2020 2f2f 2072  tyPressed;  // r
00002110: 656d 656d 6265 7220 666f 7220 6e65 7874  emember for next
00002120: 2063 616c 6c0a 2020 2020 7265 7475 726e   call.    return
00002130: 206a 7573 7450 7265 7373 6564 203f 2073   justPressed ? s
00002140: 656c 662d 3e63 6861 7256 616c 7565 203a  elf->charValue :
00002150: 2027 5c30 273b 0a7d 0a0a 0a4b 6579 5374   '\0';.}...KeySt
00002160: 6174 6520 7370 6163 654b 6579 203d 207b  ate spaceKey = {
00002170: 2027 2027 2020 2c20 4b45 595f 5052 4f42   ' '  , KEY_PROB
00002180: 455f 5350 4143 452c 204b 4559 5f42 4954  E_SPACE, KEY_BIT
00002190: 5f53 5041 4345 2c20 4641 4c53 4520 7d3b  _SPACE, FALSE };
000021a0: 0a4b 6579 5374 6174 6520 6272 6561 6b4b  .KeyState breakK
000021b0: 6579 203d 207b 2027 5c78 3327 2c20 4b45  ey = { '\x3', KE
000021c0: 595f 5052 4f42 455f 4252 4541 4b2c 204b  Y_PROBE_BREAK, K
000021d0: 4559 5f42 4954 5f42 5245 414b 2c20 4641  EY_BIT_BREAK, FA
000021e0: 4c53 4520 7d3b 0a0a 0a2f 2f20 5468 6520  LSE };...// The 
000021f0: 7369 676e 6174 7572 6520 6f66 2074 6869  signature of thi
00002200: 7320 6675 6e63 7469 6f6e 206d 7573 7420  s function must 
00002210: 6265 206f 6620 7468 6520 7479 7065 206f  be of the type o
00002220: 6620 4869 5265 7354 6578 7453 6372 6565  f HiResTextScree
00002230: 6e49 6e69 7432 3a3a 696e 6b65 7946 756e  nInit2::inkeyFun
00002240: 6350 7472 2e0a 2f2f 0a62 7974 6520 706f  cPtr..//.byte po
00002250: 6c6c 436f 436f 334b 6579 626f 6172 6428  llCoCo3Keyboard(
00002260: 290a 7b0a 2020 2020 6279 7465 206b 6579  ).{.    byte key
00002270: 203d 204b 6579 5374 6174 655f 7072 6f63   = KeyState_proc
00002280: 6573 7328 2673 7061 6365 4b65 7929 3b0a  ess(&spaceKey);.
00002290: 2020 2020 6966 2028 6b65 7929 0a20 2020      if (key).   
000022a0: 2020 2020 2072 6574 7572 6e20 6b65 793b       return key;
000022b0: 0a20 2020 206b 6579 203d 204b 6579 5374  .    key = KeySt
000022c0: 6174 655f 7072 6f63 6573 7328 2662 7265  ate_process(&bre
000022d0: 616b 4b65 7929 3b0a 2020 2020 6966 2028  akKey);.    if (
000022e0: 6b65 7929 0a20 2020 2020 2020 2072 6574  key).        ret
000022f0: 7572 6e20 6b65 793b 0a20 2020 2072 6574  urn key;.    ret
00002300: 7572 6e20 303b 0a7d 0a0a 0a74 7970 6564  urn 0;.}...typed
00002310: 6566 2069 6e74 6572 7275 7074 2076 6f69  ef interrupt voi
00002320: 6420 282a 4953 5229 2876 6f69 6429 3b0a  d (*ISR)(void);.
00002330: 0a0a 2f2f 2043 6f75 6e74 6572 2074 6861  ..// Counter tha
00002340: 7420 6765 7473 2069 6e63 7265 6d65 6e74  t gets increment
00002350: 6564 2036 3020 7469 6d65 7320 7065 7220  ed 60 times per 
00002360: 7365 636f 6e64 2c20 756e 7469 6c20 7468  second, until th
00002370: 6520 6772 6170 6869 6373 2064 7269 7665  e graphics drive
00002380: 7220 6973 2069 6e69 7461 6c69 7a65 642e  r is initalized.
00002390: 0a2f 2f0a 776f 7264 2074 696d 6572 3b0a  .//.word timer;.
000023a0: 0a0a 7374 6174 6963 2069 6e74 6572 7275  ..static interru
000023b0: 7074 2076 6f69 640a 6972 7149 5352 2829  pt void.irqISR()
000023c0: 0a7b 0a20 2020 2061 736d 0a20 2020 207b  .{.    asm.    {
000023d0: 0a5f 6473 6b63 6f6e 5f69 7271 5365 7276  ._dskcon_irqServ
000023e0: 6963 6520 494d 504f 5254 0a20 2020 2020  ice IMPORT.     
000023f0: 2020 206c 6462 2020 2020 2024 4646 3033     ldb     $FF03
00002400: 0a20 2020 2020 2020 2062 706c 2020 2020  .        bpl    
00002410: 2040 646f 6e65 2020 2020 2020 2020 2020   @done          
00002420: 202f 2f20 646f 206e 6f74 6869 6e67 2069   // do nothing i
00002430: 6620 3633 2e35 2075 7320 696e 7465 7272  f 63.5 us interr
00002440: 7570 740a 2020 2020 2020 2020 6c64 6220  upt.        ldb 
00002450: 2020 2020 2446 4630 3220 2020 2020 2020      $FF02       
00002460: 2020 2020 2f2f 2036 3020 487a 2069 6e74      // 60 Hz int
00002470: 6572 7275 7074 2e20 5265 7365 7420 5049  errupt. Reset PI
00002480: 4130 2c20 706f 7274 2042 2069 6e74 6572  A0, port B inter
00002490: 7275 7074 2066 6c61 672e 0a3b 0a20 2020  rupt flag..;.   
000024a0: 2020 2020 206c 6464 2020 2020 203a 7469       ldd     :ti
000024b0: 6d65 720a 2020 2020 2020 2020 6164 6464  mer.        addd
000024c0: 2020 2020 2331 0a20 2020 2020 2020 2073      #1.        s
000024d0: 7464 2020 2020 203a 7469 6d65 720a 4064  td     :timer.@d
000024e0: 6f6e 650a 2020 2020 7d0a 7d0a 0a0a 2f2f  one.    }.}...//
000024f0: 2057 7269 7465 7320 6120 4a4d 5020 696e   Writes a JMP in
00002500: 7374 7275 6374 696f 6e20 6174 2027 7665  struction at 've
00002510: 6374 6f72 272c 2066 6f6c 6c6f 7765 6420  ctor', followed 
00002520: 6279 2074 6865 2061 6464 7265 7373 2069  by the address i
00002530: 6e20 6e65 7752 6f75 7469 6e65 2e0a 2f2f  n newRoutine..//
00002540: 204d 7573 7420 6265 2063 616c 6c65 6420   Must be called 
00002550: 7768 696c 6520 696e 7465 7272 7570 7473  while interrupts
00002560: 2061 7265 2064 6973 6162 6c65 642e 0a2f   are disabled../
00002570: 2f20 7665 6374 6f72 3a20 652e 672e 2c20  / vector: e.g., 
00002580: 3078 4646 4638 2066 6f72 2049 5251 2e0a  0xFFF8 for IRQ..
00002590: 2f2f 0a76 6f69 640a 7365 7449 5352 2876  //.void.setISR(v
000025a0: 6f69 6420 2a76 6563 746f 722c 2049 5352  oid *vector, ISR
000025b0: 206e 6577 526f 7574 696e 6529 0a7b 0a20   newRoutine).{. 
000025c0: 2020 2062 7974 6520 2a69 7372 203d 202a     byte *isr = *
000025d0: 2028 6279 7465 202a 2a29 2076 6563 746f   (byte **) vecto
000025e0: 723b 0a20 2020 202a 6973 7220 3d20 3078  r;.    *isr = 0x
000025f0: 3745 3b20 202f 2f20 4a4d 5020 6578 7465  7E;  // JMP exte
00002600: 6e64 6564 0a20 2020 202a 2028 4953 5220  nded.    * (ISR 
00002610: 2a29 2028 6973 7220 2b20 3129 203d 206e  *) (isr + 1) = n
00002620: 6577 526f 7574 696e 653b 0a7d 0a0a 0a2f  ewRoutine;.}.../
00002630: 2f20 5247 4220 6170 7072 6f78 696d 6174  / RGB approximat
00002640: 696f 6e20 6f66 2074 6865 2031 3620 636f  ion of the 16 co
00002650: 6c6f 7273 2073 7065 6369 6669 6564 2062  lors specified b
00002660: 7920 7468 6520 4265 726b 656c 6579 204c  y the Berkeley L
00002670: 6f67 6f20 5573 6572 204d 616e 7561 6c0a  ogo User Manual.
00002680: 2f2f 2066 6f72 2074 6865 2053 4554 5045  // for the SETPE
00002690: 4e43 4f4c 4f52 2063 6f6d 6d61 6e64 3a0a  NCOLOR command:.
000026a0: 2f2f 0920 3020 2062 6c61 636b 0920 3120  //. 0  black. 1 
000026b0: 2062 6c75 6509 2032 2020 6772 6565 6e09   blue. 2  green.
000026c0: 2033 2020 6379 616e 0a2f 2f09 2034 2020   3  cyan.//. 4  
000026d0: 7265 6409 0920 3520 206d 6167 656e 7461  red.. 5  magenta
000026e0: 0920 3620 2079 656c 6c6f 7709 2037 2020  . 6  yellow. 7  
000026f0: 7768 6974 650a 2f2f 0920 3820 2062 726f  white.//. 8  bro
00002700: 776e 0920 3920 2074 616e 0909 3130 2020  wn. 9  tan..10  
00002710: 666f 7265 7374 0931 3120 2061 7175 610a  forest.11  aqua.
00002720: 2f2f 0931 3220 2073 616c 6d6f 6e09 3133  //.12  salmon.13
00002730: 2020 7075 7270 6c65 0931 3420 206f 7261    purple.14  ora
00002740: 6e67 6509 3135 2020 6772 6579 0a2f 2f0a  nge.15  grey.//.
00002750: 7374 6174 6963 2063 6f6e 7374 2062 7974  static const byt
00002760: 6520 7563 624c 6f67 6f50 616c 6574 7465  e ucbLogoPalette
00002770: 5661 6c75 6573 5b31 365d 203d 0a7b 0a20  Values[16] =.{. 
00002780: 2020 2020 302c 2020 392c 2031 382c 2032      0,  9, 18, 2
00002790: 372c 0a20 2020 2033 362c 2034 352c 2035  7,.    36, 45, 5
000027a0: 342c 2036 332c 0a20 2020 2033 342c 2035  4, 63,.    34, 5
000027b0: 332c 2032 302c 2032 392c 0a20 2020 2036  3, 20, 29,.    6
000027c0: 302c 2034 302c 2033 382c 2035 362c 0a7d  0, 40, 38, 56,.}
000027d0: 3b0a 0a0a 7374 6174 6963 2076 6f69 640a  ;...static void.
000027e0: 7265 7365 7447 7261 7068 6963 7350 616c  resetGraphicsPal
000027f0: 6574 7465 2876 6f69 6429 0a7b 0a20 2020  ette(void).{.   
00002800: 202f 2f20 496e 6974 6961 6c69 7a65 2074   // Initialize t
00002810: 6865 2070 616c 6574 7465 2e20 4173 7375  he palette. Assu
00002820: 6d65 7320 5247 422e 0a20 2020 206d 656d  mes RGB..    mem
00002830: 6370 7928 2876 6f69 6420 2a29 2030 7846  cpy((void *) 0xF
00002840: 4642 302c 2075 6362 4c6f 676f 5061 6c65  FB0, ucbLogoPale
00002850: 7474 6556 616c 7565 732c 2073 697a 656f  tteValues, sizeo
00002860: 6628 7563 624c 6f67 6f50 616c 6574 7465  f(ucbLogoPalette
00002870: 5661 6c75 6573 2929 3b0a 7d0a 0a0a 2f2f  Values));.}...//
00002880: 2053 746f 7265 2074 6865 2033 3230 7831   Store the 320x1
00002890: 3932 7831 3620 7363 7265 656e 2062 7566  92x16 screen buf
000028a0: 6665 7220 6174 2061 6273 6f6c 7574 6520  fer at absolute 
000028b0: 6164 6472 6573 7320 2437 3830 3030 2c0a  address $78000,.
000028c0: 2f2f 2069 2e65 2e2c 206f 7665 7220 7468  // i.e., over th
000028d0: 6520 4261 7369 6320 696e 7465 7270 7265  e Basic interpre
000028e0: 7465 722e 0a2f 2f20 5573 6520 6164 6472  ter..// Use addr
000028f0: 6573 7365 7320 2438 3030 302e 2e24 4643  esses $8000..$FC
00002900: 4646 2028 6366 2043 4f43 4f33 5f53 4352  FF (cf COCO3_SCR
00002910: 4545 4e29 2074 6f20 6163 6365 7373 2074  EEN) to access t
00002920: 6861 7420 6275 6666 6572 2e0a 2f2f 2054  hat buffer..// T
00002930: 6869 7320 696e 766f 6c76 6573 2072 6564  his involves red
00002940: 6972 6563 7469 6e67 2074 6865 2049 5251  irecting the IRQ
00002950: 2074 6f20 7468 6973 2070 726f 6772 616d   to this program
00002960: 2773 206f 776e 2073 6572 7669 6365 2072  's own service r
00002970: 6f75 7469 6e65 2c0a 2f2f 2073 696e 6365  outine,.// since
00002980: 2042 6173 6963 2773 2049 5352 2077 696c   Basic's ISR wil
00002990: 6c20 6765 7420 6f76 6572 7772 6974 7465  l get overwritte
000029a0: 6e2e 0a2f 2f20 436c 6561 7273 2074 6865  n..// Clears the
000029b0: 2067 7261 7068 6963 7320 7363 7265 656e   graphics screen
000029c0: 2e0a 2f2f 2053 6574 7320 7468 6520 7061  ..// Sets the pa
000029d0: 6c65 7474 6520 666f 7220 616e 2052 4742  lette for an RGB
000029e0: 2073 6372 6565 6e2e 0a2f 2f0a 2f2f 2063   screen..//.// c
000029f0: 6f6c 6f72 3a20 302e 2e31 352e 0a2f 2f0a  olor: 0..15..//.
00002a00: 766f 6964 2073 686f 7743 6f43 6f33 4772  void showCoCo3Gr
00002a10: 6170 6869 6373 4d6f 6465 2862 7974 6520  aphicsMode(byte 
00002a20: 636f 6c6f 7229 0a7b 0a20 2020 2064 6973  color).{.    dis
00002a30: 6162 6c65 496e 7465 7272 7570 7473 2829  ableInterrupts()
00002a40: 3b0a 2020 2020 7365 7449 5352 2849 5251  ;.    setISR(IRQ
00002a50: 5f56 4543 544f 522c 2069 7271 4953 5229  _VECTOR, irqISR)
00002a60: 3b20 202f 2f20 6e6f 206e 6565 6420 666f  ;  // no need fo
00002a70: 7220 4261 7369 6327 7320 4953 5220 616e  r Basic's ISR an
00002a80: 796d 6f72 650a 2020 2020 656e 6162 6c65  ymore.    enable
00002a90: 496e 7465 7272 7570 7473 2829 3b0a 0a20  Interrupts();.. 
00002aa0: 2020 2077 6f72 6420 776f 7264 546f 436c     word wordToCl
00002ab0: 6561 7257 6974 6820 3d20 636f 6c6f 7220  earWith = color 
00002ac0: 7c20 2863 6f6c 6f72 203c 3c20 3429 207c  | (color << 4) |
00002ad0: 2028 2877 6f72 6429 2063 6f6c 6f72 203c   ((word) color <
00002ae0: 3c20 3829 207c 2028 2877 6f72 6429 2063  < 8) | ((word) c
00002af0: 6f6c 6f72 203c 3c20 3132 293b 0a20 2020  olor << 12);.   
00002b00: 202f 2f20 436c 6561 7220 7468 6520 6772   // Clear the gr
00002b10: 6170 6869 6373 2073 6372 6565 6e20 6265  aphics screen be
00002b20: 666f 7265 2073 686f 7769 6e67 2069 742e  fore showing it.
00002b30: 0a20 2020 206d 656d 7365 7431 3628 434f  .    memset16(CO
00002b40: 434f 335f 5343 5245 454e 2c20 776f 7264  CO3_SCREEN, word
00002b50: 546f 436c 6561 7257 6974 682c 2033 3230  ToClearWith, 320
00002b60: 7520 2a20 3139 3220 2f20 3429 3b20 202f  u * 192 / 4);  /
00002b70: 2f20 7520 7375 6666 6978 2066 6f72 6365  / u suffix force
00002b80: 7320 756e 7369 676e 6564 2061 7269 7468  s unsigned arith
00002b90: 6d65 7469 632c 2061 766f 6964 7320 6e65  metic, avoids ne
00002ba0: 6761 7469 7665 206f 7665 7266 6c6f 770a  gative overflow.
00002bb0: 0a20 2020 202f 2f20 5365 7420 436f 436f  .    // Set CoCo
00002bc0: 2033 2067 7261 7068 6963 7320 6d6f 6465   3 graphics mode
00002bd0: 2e0a 2020 2020 2a20 2862 7974 6520 2a29  ..    * (byte *)
00002be0: 2030 7846 4639 3020 3d20 3078 3443 3b20   0xFF90 = 0x4C; 
00002bf0: 202f 2f20 7265 7365 7420 436f 436f 2032   // reset CoCo 2
00002c00: 2063 6f6d 7061 7469 626c 6520 6269 740a   compatible bit.
00002c10: 2020 2020 2a20 2862 7974 6520 2a29 2030      * (byte *) 0
00002c20: 7846 4639 3820 3d20 3078 3830 3b20 202f  xFF98 = 0x80;  /
00002c30: 2f20 6772 6170 6869 6373 206d 6f64 650a  / graphics mode.
00002c40: 2020 2020 2a20 2862 7974 6520 2a29 2030      * (byte *) 0
00002c50: 7846 4639 3920 3d20 3078 3145 3b20 202f  xFF99 = 0x1E;  /
00002c60: 2f20 3332 3078 3139 322c 2031 3620 636f  / 320x192, 16 co
00002c70: 6c6f 7273 0a20 2020 202a 2028 6279 7465  lors.    * (byte
00002c80: 202a 2920 3078 4646 3941 203d 2030 3b20   *) 0xFF9A = 0; 
00002c90: 202f 2f20 626f 7264 6572 2063 6f6c 6f72   // border color
00002ca0: 2028 302e 2e36 3329 0a0a 2020 2020 2a20   (0..63)..    * 
00002cb0: 2877 6f72 6420 2a29 2030 7846 4639 4420  (word *) 0xFF9D 
00002cc0: 3d20 3078 4630 3030 3b20 202f 2f20 3078  = 0xF000;  // 0x
00002cd0: 3738 3030 3020 3e3e 2033 2028 6d75 7374  78000 >> 3 (must
00002ce0: 2062 6520 636f 6e73 6973 7465 6e74 2077   be consistent w
00002cf0: 6974 6820 434f 434f 335f 5343 5245 454e  ith COCO3_SCREEN
00002d00: 290a 0a20 2020 2072 6573 6574 4772 6170  )..    resetGrap
00002d10: 6869 6373 5061 6c65 7474 6528 293b 0a7d  hicsPalette();.}
00002d20: 0a0a 0a76 6f69 640a 656e 6162 6c65 536f  ...void.enableSo
00002d30: 756e 6428 766f 6964 290a 7b0a 2020 2020  und(void).{.    
00002d40: 2f2f 2042 6173 6564 206f 6e20 436f 6c6f  // Based on Colo
00002d50: 7220 4261 7369 6320 636f 6465 2061 7420  r Basic code at 
00002d60: 2439 4132 422e 0a20 2020 2062 7974 6520  $9A2B..    byte 
00002d70: 2a70 6961 3020 3d20 2862 7974 6520 2a29  *pia0 = (byte *)
00002d80: 2030 7846 4630 303b 0a20 2020 2070 6961   0xFF00;.    pia
00002d90: 305b 315d 2026 3d20 3078 4637 3b0a 2020  0[1] &= 0xF7;.  
00002da0: 2020 7069 6130 5b33 5d20 263d 2030 7846    pia0[3] &= 0xF
00002db0: 373b 0a20 2020 2062 7974 6520 2a70 6961  7;.    byte *pia
00002dc0: 3120 3d20 2862 7974 6520 2a29 2030 7846  1 = (byte *) 0xF
00002dd0: 4632 303b 0a20 2020 2070 6961 315b 335d  F20;.    pia1[3]
00002de0: 207c 3d20 3078 3038 3b0a 7d0a 0a0a 766f   |= 0x08;.}...vo
00002df0: 6964 0a64 6973 6162 6c65 536f 756e 6428  id.disableSound(
00002e00: 766f 6964 290a 7b0a 2020 2020 2f2f 2042  void).{.    // B
00002e10: 6173 6564 206f 6e20 4543 4220 636f 6465  ased on ECB code
00002e20: 2061 7420 2441 3937 342e 0a20 2020 202a   at $A974..    *
00002e30: 2028 6279 7465 202a 2920 3078 4646 3233   (byte *) 0xFF23
00002e40: 2026 3d20 3078 4637 3b0a 7d0a 0a0a 766f   &= 0xF7;.}...vo
00002e50: 6964 2070 6c61 7943 6f43 6f33 4265 6c6c  id playCoCo3Bell
00002e60: 2876 6f69 6429 0a7b 0a20 2020 2065 6e61  (void).{.    ena
00002e70: 626c 6553 6f75 6e64 2829 3b0a 0a20 2020  bleSound();..   
00002e80: 202f 2f20 506c 6179 2061 2073 686f 7274   // Play a short
00002e90: 2032 3030 2048 7a20 7371 7561 7265 2077   200 Hz square w
00002ea0: 6176 652e 0a20 2020 2061 736d 0a20 2020  ave..    asm.   
00002eb0: 207b 0a20 2020 2020 2020 206c 6478 2020   {.        ldx  
00002ec0: 2020 2023 3230 302f 3132 2020 2020 2020     #200/12      
00002ed0: 2020 2020 2020 203b 206e 756d 6265 7220         ; number 
00002ee0: 6f66 2063 6f6d 706c 6574 6520 7065 7269  of complete peri
00002ef0: 6f64 7320 746f 2070 6c61 7920 6f66 2074  ods to play of t
00002f00: 6865 2073 7175 6172 6520 7761 7665 0a40  he square wave.@
00002f10: 706c 6179 4c6f 6f70 0a20 2020 2020 2020  playLoop.       
00002f20: 206c 6461 2020 2020 2023 2833 322b 3136   lda     #(32+16
00002f30: 292a 3420 2020 2020 2020 2020 203b 206c  )*4          ; l
00002f40: 6f61 6420 6869 6768 2076 616c 7565 206f  oad high value o
00002f50: 6620 7371 7561 7265 2077 6176 6520 2832  f square wave (2
00002f60: 2063 7963 6c65 7329 0a20 2020 2020 2020   cycles).       
00002f70: 2062 7372 2020 2020 2040 706c 6179 4120   bsr     @playA 
00002f80: 2020 2020 2020 2020 2020 2020 203b 2028               ; (
00002f90: 3620 6379 636c 6573 290a 2020 2020 2020  6 cycles).      
00002fa0: 2020 6c64 6120 2020 2020 2328 3332 2d31    lda     #(32-1
00002fb0: 3629 2a34 2020 2020 2020 2020 2020 3b20  6)*4          ; 
00002fc0: 6c6f 6164 206c 6f77 2076 616c 7565 2028  load low value (
00002fd0: 3220 6379 636c 6573 290a 2020 2020 2020  2 cycles).      
00002fe0: 2020 6273 7220 2020 2020 4070 6c61 7941    bsr     @playA
00002ff0: 2020 2020 2020 2020 2020 2020 2020 3b20                ; 
00003000: 2836 290a 2020 2020 2020 2020 6c65 6178  (6).        leax
00003010: 2020 2020 2d31 2c78 2020 2020 2020 2020      -1,x        
00003020: 2020 2020 2020 2020 3b20 2835 290a 2020          ; (5).  
00003030: 2020 2020 2020 6268 6920 2020 2020 4070        bhi     @p
00003040: 6c61 794c 6f6f 7020 2020 2020 2020 2020  layLoop         
00003050: 2020 3b20 2833 2920 0a20 2020 2020 2020    ; (3) .       
00003060: 2062 7261 2020 2020 2040 646f 6e65 0a40   bra     @done.@
00003070: 706c 6179 410a 3b0a 3b20 2f2f 2041 2068  playA.;.; // A h
00003080: 616c 662d 7065 7269 6f64 2073 7061 6e20  alf-period span 
00003090: 6120 4253 5220 666f 6c6c 6f77 6564 2062  a BSR followed b
000030a0: 7920 7468 6973 2040 706c 6179 4120 726f  y this @playA ro
000030b0: 7574 696e 652c 0a3b 202f 2f20 692e 652e  utine,.; // i.e.
000030c0: 2c20 3620 2b20 2834 202b 2033 202b 206b  , 6 + (4 + 3 + k
000030d0: 202a 2028 3320 2b20 3329 202b 2034 292c   * (3 + 3) + 4),
000030e0: 0a3b 202f 2f20 7768 6572 6520 6b20 6973  .; // where k is
000030f0: 2074 6865 206e 756d 6265 7220 6f66 2069   the number of i
00003100: 7465 6174 696f 6e73 206f 6620 4064 656c  teations of @del
00003110: 6179 4c6f 6f70 2e0a 3b0a 3b20 2f2f 2057  ayLoop..;.; // W
00003120: 6520 7761 6e74 2074 6869 7320 6e75 6d62  e want this numb
00003130: 6572 206f 6620 6379 636c 6573 2074 6f20  er of cycles to 
00003140: 6c61 7374 2031 202f 2046 202f 2032 2073  last 1 / F / 2 s
00003150: 6563 6f6e 642c 0a3b 202f 2f20 7768 6572  econd,.; // wher
00003160: 6520 4620 6973 2074 6865 2066 7265 7175  e F is the frequ
00003170: 656e 6379 2069 6e20 487a 206f 6620 7468  ency in Hz of th
00003180: 6520 7371 7561 7265 2077 6176 6520 2865  e square wave (e
00003190: 2e67 2e2c 2032 3030 2048 7a29 2e0a 3b20  .g., 200 Hz)..; 
000031a0: 2f2f 2031 2073 6563 6f6e 6420 6973 2038  // 1 second is 8
000031b0: 3934 3838 3620 6379 636c 6573 206f 6e20  94886 cycles on 
000031c0: 6120 436f 436f 2077 6974 686f 7574 2061  a CoCo without a
000031d0: 6e79 2068 6967 6820 7370 6565 6420 706f  ny high speed po
000031e0: 6b65 2e0a 3b0a 3b20 2f2f 2053 6f20 7765  ke..;.; // So we
000031f0: 2068 6176 6520 3620 2b20 2834 202b 2033   have 6 + (4 + 3
00003200: 202b 206b 202a 2028 3320 2b20 3329 202b   + k * (3 + 3) +
00003210: 2034 2920 3d3d 2038 3934 3838 3620 2f20   4) == 894886 / 
00003220: 4620 2f20 322c 0a3b 202f 2f20 692e 652e  F / 2,.; // i.e.
00003230: 2c20 3137 202b 2036 202a 206b 203d 3d20  , 17 + 6 * k == 
00003240: 3434 3734 3433 202f 2032 3030 0a3b 202f  447443 / 200.; /
00003250: 2f20 692e 652e 2c20 6b20 3d20 2834 3437  / i.e., k = (447
00003260: 3434 3320 2f20 3230 3020 2d20 3137 2920  443 / 200 - 17) 
00003270: 2f20 362e 0a3b 202f 2f20 692e 652e 2c20  / 6..; // i.e., 
00003280: 6b20 3d20 3337 302e 3033 3538 3333 332e  k = 370.0358333.
00003290: 0a3b 0a20 2020 2020 2020 2073 7461 2020  .;.        sta  
000032a0: 2020 2024 4646 3230 2020 2020 2020 2020     $FF20        
000032b0: 2020 2020 2020 203b 2028 3429 0a20 2020         ; (4).   
000032c0: 2020 2020 206c 6464 2020 2020 2023 3337       ldd     #37
000032d0: 3020 2020 2020 2020 2020 2020 2020 2020  0               
000032e0: 203b 2028 3329 2068 616c 662d 7065 7269   ; (3) half-peri
000032f0: 6f64 2064 656c 6179 2066 6f72 2063 686f  od delay for cho
00003300: 7365 6e20 6672 6571 7565 6e63 790a 4064  sen frequency.@d
00003310: 656c 6179 4c6f 6f70 0a20 2020 2020 2020  elayLoop.       
00003320: 2073 7562 6420 2020 2023 3120 2020 2020   subd    #1     
00003330: 2020 2020 2020 2020 2020 2020 203b 2028               ; (
00003340: 3329 0a20 2020 2020 2020 2062 6869 2020  3).        bhi  
00003350: 2020 2040 6465 6c61 794c 6f6f 7020 2020     @delayLoop   
00003360: 2020 2020 2020 203b 2028 3329 0a20 2020         ; (3).   
00003370: 2020 2020 2072 7473 2020 2020 2020 2020       rts        
00003380: 2020 2020 2020 2020 2020 2020 2020 2020                  
00003390: 203b 2028 3429 0a40 646f 6e65 0a20 2020   ; (4).@done.   
000033a0: 207d 0a0a 2020 2020 6469 7361 626c 6553   }..    disableS
000033b0: 6f75 6e64 2829 3b0a 7d0a 0a0a 2365 6e64  ound();.}...#end
000033c0: 6966 2020 2f2a 2043 6f43 6f20 3320 7375  if  /* CoCo 3 su
000033d0: 7070 6f72 742e 202a 2f0a 0a0a 7374 6174  pport. */...stat
000033e0: 6963 2076 6f69 6420 7265 7374 6f72 6554  ic void restoreT
000033f0: 6578 7453 6372 6565 6e28 766f 6964 290a  extScreen(void).
00003400: 7b0a 2020 2020 2369 6620 6465 6669 6e65  {.    #if define
00003410: 6428 5f43 4f43 4f5f 4241 5349 435f 2920  d(_COCO_BASIC_) 
00003420: 7c7c 2064 6566 696e 6564 2844 5241 474f  || defined(DRAGO
00003430: 4e29 0a20 2020 2070 6d6f 6465 2830 2c20  N).    pmode(0, 
00003440: 3029 3b0a 2020 2020 636c 7328 3235 3529  0);.    cls(255)
00003450: 3b0a 2020 2020 7363 7265 656e 2830 2c20  ;.    screen(0, 
00003460: 3029 3b0a 2020 2020 2365 6c69 6620 6465  0);.    #elif de
00003470: 6669 6e65 6428 4f53 3929 0a20 2020 2071  fined(OS9).    q
00003480: 7569 744f 5339 4772 6170 6869 6373 2829  uitOS9Graphics()
00003490: 3b0a 2020 2020 2365 6e64 6966 0a7d 0a0a  ;.    #endif.}..
000034a0: 0a2f 2f20 7573 6534 7838 466f 6e74 3a20  .// use4x8Font: 
000034b0: 5452 5545 2074 6f20 7573 6520 7468 6520  TRUE to use the 
000034c0: 3478 3820 666f 6e74 2028 6769 7665 7320  4x8 font (gives 
000034d0: 3531 2063 6f6c 756d 6e73 2069 6e20 504d  51 columns in PM
000034e0: 4f44 4520 342c 2036 3420 696e 2033 3230  ODE 4, 64 in 320
000034f0: 7831 3932 206d 6f64 6529 2c0a 2f2f 2020  x192 mode),.//  
00003500: 2020 2020 2020 2020 2020 2046 414c 5345             FALSE
00003510: 2074 6f20 7573 6520 7468 6520 3578 3820   to use the 5x8 
00003520: 666f 6e74 2028 6769 7665 7320 3432 2063  font (gives 42 c
00003530: 6f6c 756d 6e73 2069 6e20 504d 4f44 4520  olumns in PMODE 
00003540: 3429 2e0a 2f2f 2052 6574 7572 6e73 2054  4)..// Returns T
00003550: 5255 4520 6966 2074 6865 2075 7365 7220  RUE if the user 
00003560: 7761 6e74 7320 746f 2063 6f6e 7469 6e75  wants to continu
00003570: 6520 746f 2074 6865 206e 6578 7420 6465  e to the next de
00003580: 6d6f 2e0a 2f2f 2052 6574 7572 6e73 2046  mo..// Returns F
00003590: 414c 5345 2069 6620 7468 6520 7573 6572  ALSE if the user
000035a0: 2070 7265 7373 6564 2074 6865 2042 7265   pressed the Bre
000035b0: 616b 206b 6579 206f 7220 6966 0a2f 2f20  ak key or if.// 
000035c0: 7468 6520 7265 7175 6573 7420 6465 6d6f  the request demo
000035d0: 2069 7320 6e6f 7420 7375 7070 6f72 7465   is not supporte
000035e0: 642e 0a2f 2f0a 7374 6174 6963 2042 4f4f  d..//.static BOO
000035f0: 4c20 6465 6d6f 2842 4f4f 4c20 7573 6534  L demo(BOOL use4
00003600: 7838 466f 6e74 2c20 424f 4f4c 2075 7365  x8Font, BOOL use
00003610: 436f 436f 3353 6372 6565 6e29 0a7b 0a20  CoCo3Screen).{. 
00003620: 2020 2023 6966 6465 6620 4f53 390a 2020     #ifdef OS9.  
00003630: 2020 4b65 7962 6f61 7264 5f69 6e69 7428    Keyboard_init(
00003640: 2674 6865 4b65 7962 6f61 7264 293b 0a0a  &theKeyboard);..
00003650: 2020 2020 6279 7465 202a 7363 7265 656e      byte *screen
00003660: 4275 6666 6572 203d 2073 686f 774f 5339  Buffer = showOS9
00003670: 504d 6f64 6534 5363 7265 656e 2829 3b0a  PMode4Screen();.
00003680: 2020 2020 6966 2028 7363 7265 656e 4275      if (screenBu
00003690: 6666 6572 203d 3d20 4e55 4c4c 290a 2020  ffer == NULL).  
000036a0: 2020 7b0a 2020 2020 2020 2020 7072 696e    {.        prin
000036b0: 7466 2822 4661 696c 6564 2074 6f20 7365  tf("Failed to se
000036c0: 7420 7570 2067 7261 7068 6963 7320 7363  t up graphics sc
000036d0: 7265 656e 2e5c 6e22 293b 0a20 2020 2020  reen.\n");.     
000036e0: 2020 2072 6574 7572 6e20 4641 4c53 453b     return FALSE;
000036f0: 0a20 2020 207d 0a20 2020 2023 656c 7365  .    }.    #else
00003700: 0a20 2020 2069 6620 2875 7365 436f 436f  .    if (useCoCo
00003710: 3353 6372 6565 6e20 2626 2021 7573 6534  3Screen && !use4
00003720: 7838 466f 6e74 290a 2020 2020 2020 2020  x8Font).        
00003730: 7265 7475 726e 2046 414c 5345 3b20 202f  return FALSE;  /
00003740: 2f20 3578 3820 6e6f 7420 7375 7070 6f72  / 5x8 not suppor
00003750: 7465 6420 696e 2034 2062 7070 206d 6f64  ted in 4 bpp mod
00003760: 650a 2020 2020 2365 6e64 6966 0a0a 2020  e.    #endif..  
00003770: 2020 2f2f 2069 6e69 7448 6952 6573 5465    // initHiResTe
00003780: 7874 5363 7265 656e 2829 206d 7573 7420  xtScreen() must 
00003790: 6265 2063 616c 6c65 6420 6669 7273 742e  be called first.
000037a0: 0a20 2020 202f 2f20 4173 7375 6d65 7320  .    // Assumes 
000037b0: 3420 6772 6170 6869 6373 2070 6167 6573  4 graphics pages
000037c0: 2072 6573 6572 7665 6420 6174 2074 6865   reserved at the
000037d0: 2063 7572 7265 6e74 2073 7461 7274 206f   current start o
000037e0: 6620 6772 6170 6869 6373 2052 414d 2e0a  f graphics RAM..
000037f0: 2020 2020 2f2f 2054 5255 4520 7265 7175      // TRUE requ
00003800: 6573 7473 2074 6861 7420 7072 696e 7466  ests that printf
00003810: 2829 2062 6520 7265 6469 7265 6374 6564  () be redirected
00003820: 2074 6f20 7468 6520 5654 3532 2069 6e74   to the VT52 int
00003830: 6572 7072 6574 6572 2c0a 2020 2020 2f2f  erpreter,.    //
00003840: 2077 6869 6368 2077 7269 7465 7320 746f   which writes to
00003850: 2074 6865 2035 3178 3234 2073 6372 6565   the 51x24 scree
00003860: 6e2e 0a20 2020 202f 2f0a 2020 2020 7374  n..    //.    st
00003870: 7275 6374 2048 6952 6573 5465 7874 5363  ruct HiResTextSc
00003880: 7265 656e 496e 6974 3220 696e 6974 203d  reenInit2 init =
00003890: 0a20 2020 2020 2020 207b 0a20 2020 2020  .        {.     
000038a0: 2020 2020 2020 207b 2020 202f 2f20 6d65         {   // me
000038b0: 6d62 6572 2027 696e 6974 272c 206f 6620  mber 'init', of 
000038c0: 7479 7065 2073 7472 7563 7420 4869 5265  type struct HiRe
000038d0: 7354 6578 7453 6372 6565 6e49 6e69 743a  sTextScreenInit:
000038e0: 0a0a 2020 2020 2020 2020 2020 2020 2020  ..              
000038f0: 2020 7573 6534 7838 466f 6e74 203f 2035    use4x8Font ? 5
00003900: 3120 3a20 3432 2c0a 2020 2020 2020 2020  1 : 42,.        
00003910: 2020 2020 2020 2020 2369 6620 6465 6669          #if defi
00003920: 6e65 6428 5553 455f 3531 7832 3429 2026  ned(USE_51x24) &
00003930: 2620 6465 6669 6e65 6428 5553 455f 3432  & defined(USE_42
00003940: 7832 3429 0a20 2020 2020 2020 2020 2020  x24).           
00003950: 2020 2020 2021 7573 6534 7838 466f 6e74       !use4x8Font
00003960: 203f 2077 7269 7465 4368 6172 4174 5f34   ? writeCharAt_4
00003970: 3263 6f6c 730a 2020 2020 2020 2020 2020  2cols.          
00003980: 2020 2020 2020 2020 2020 2020 2020 3a20                : 
00003990: 2875 7365 436f 436f 3353 6372 6565 6e20  (useCoCo3Screen 
000039a0: 3f20 7772 6974 6543 6861 7241 745f 3332  ? writeCharAt_32
000039b0: 3078 3136 0a20 2020 2020 2020 2020 2020  0x16.           
000039c0: 2020 2020 2020 2020 2020 2020 2020 2020                  
000039d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
000039e0: 203a 2077 7269 7465 4368 6172 4174 5f35   : writeCharAt_5
000039f0: 3163 6f6c 7329 2c0a 2020 2020 2020 2020  1cols),.        
00003a00: 2020 2020 2020 2020 2365 6c69 6620 6465          #elif de
00003a10: 6669 6e65 6428 5553 455f 3531 7832 3429  fined(USE_51x24)
00003a20: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
00003a30: 2075 7365 436f 436f 3353 6372 6565 6e20   useCoCo3Screen 
00003a40: 3f20 7772 6974 6543 6861 7241 745f 3332  ? writeCharAt_32
00003a50: 3078 3136 0a20 2020 2020 2020 2020 2020  0x16.           
00003a60: 2020 2020 2020 2020 2020 2020 2020 2020                  
00003a70: 203a 2077 7269 7465 4368 6172 4174 5f35   : writeCharAt_5
00003a80: 3163 6f6c 732c 0a20 2020 2020 2020 2020  1cols,.         
00003a90: 2020 2020 2020 2023 656c 7365 0a20 2020         #else.   
00003aa0: 2020 2020 2020 2020 2020 2020 2077 7269               wri
00003ab0: 7465 4368 6172 4174 5f34 3263 6f6c 732c  teCharAt_42cols,
00003ac0: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
00003ad0: 2023 656e 6469 660a 0a20 2020 2020 2020   #endif..       
00003ae0: 2020 2020 2020 2020 2023 6966 2064 6566           #if def
00003af0: 696e 6564 285f 434f 434f 5f42 4153 4943  ined(_COCO_BASIC
00003b00: 5f29 207c 7c20 6465 6669 6e65 6428 4452  _) || defined(DR
00003b10: 4147 4f4e 290a 2020 2020 2020 2020 2020  AGON).          
00003b20: 2020 2020 2020 7573 6543 6f43 6f33 5363        useCoCo3Sc
00003b30: 7265 656e 203f 2028 6279 7465 202a 2920  reen ? (byte *) 
00003b40: 434f 434f 335f 5343 5245 454e 0a20 2020  COCO3_SCREEN.   
00003b50: 2020 2020 2020 2020 2020 2020 2020 2020                  
00003b60: 2020 2020 2020 2020 203a 2028 6279 7465           : (byte
00003b70: 202a 2920 2a20 2862 7974 6520 2a29 2030   *) * (byte *) 0
00003b80: 7830 3042 4320 3c3c 2038 2c20 202f 2f20  x00BC << 8,  // 
00003b90: 4765 7420 7374 6172 7420 6f66 2067 7261  Get start of gra
00003ba0: 7068 6963 7320 5241 4d20 6672 6f6d 2043  phics RAM from C
00003bb0: 6f6c 6f72 2042 6173 6963 2076 6172 6961  olor Basic varia
00003bc0: 626c 652e 0a20 2020 2020 2020 2020 2020  ble..           
00003bd0: 2020 2020 2023 656c 6966 2064 6566 696e       #elif defin
00003be0: 6564 284f 5339 290a 2020 2020 2020 2020  ed(OS9).        
00003bf0: 2020 2020 2020 2020 7363 7265 656e 4275          screenBu
00003c00: 6666 6572 2c0a 2020 2020 2020 2020 2020  ffer,.          
00003c10: 2020 2020 2020 2365 6c73 650a 2020 2020        #else.    
00003c20: 2020 2020 2020 2020 2020 2020 2365 7272              #err
00003c30: 6f72 0a20 2020 2020 2020 2020 2020 2020  or.             
00003c40: 2020 2023 656e 6469 660a 0a20 2020 2020     #endif..     
00003c50: 2020 2020 2020 2020 2020 2054 5255 452c             TRUE,
00003c60: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
00003c70: 2074 696d 6572 4164 6472 6573 732c 0a20   timerAddress,. 
00003c80: 2020 2020 2020 2020 2020 2020 2020 2030                 0
00003c90: 2c20 202f 2f20 6375 7273 6f72 416e 696d  ,  // cursorAnim
00003ca0: 6174 696f 6e4c 6f77 5469 6d65 7242 7974  ationLowTimerByt
00003cb0: 654d 6173 6b0a 0a20 2020 2020 2020 2020  eMask..         
00003cc0: 2020 2020 2020 2023 6966 2064 6566 696e         #if defin
00003cd0: 6564 285f 434f 434f 5f42 4153 4943 5f29  ed(_COCO_BASIC_)
00003ce0: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
00003cf0: 2075 7365 436f 436f 3353 6372 6565 6e20   useCoCo3Screen 
00003d00: 3f20 706f 6c6c 436f 436f 334b 6579 626f  ? pollCoCo3Keybo
00003d10: 6172 6420 3a20 2862 7974 6520 282a 2928  ard : (byte (*)(
00003d20: 2e2e 2e29 2920 4e55 4c4c 2c20 202f 2f20  ...)) NULL,  // 
00003d30: 6b65 7962 6f61 7264 2070 6f6c 6c69 6e67  keyboard polling
00003d40: 2066 756e 6374 696f 6e20 2864 6566 6175   function (defau
00003d50: 7420 6973 2069 6e6b 6579 2829 290a 2020  t is inkey()).  
00003d60: 2020 2020 2020 2020 2020 2020 2020 2365                #e
00003d70: 6c69 6620 6465 6669 6e65 6428 4452 4147  lif defined(DRAG
00003d80: 4f4e 290a 2020 2020 2020 2020 2020 2020  ON).            
00003d90: 2020 2020 4e55 4c4c 2c0a 2020 2020 2020      NULL,.      
00003da0: 2020 2020 2020 2020 2020 2365 6c69 6620            #elif 
00003db0: 6465 6669 6e65 6428 4f53 3929 0a20 2020  defined(OS9).   
00003dc0: 2020 2020 2020 2020 2020 2020 2070 6f6c               pol
00003dd0: 6c42 436f 6e74 726f 6c4b 6579 626f 6172  lBControlKeyboar
00003de0: 642c 0a20 2020 2020 2020 2020 2020 2020  d,.             
00003df0: 2020 2023 656e 6469 660a 0a20 2020 2020     #endif..     
00003e00: 2020 2020 2020 2020 2020 2023 6966 2064             #if d
00003e10: 6566 696e 6564 285f 434f 434f 5f42 4153  efined(_COCO_BAS
00003e20: 4943 5f29 0a20 2020 2020 2020 2020 2020  IC_).           
00003e30: 2020 2020 2075 7365 436f 436f 3353 6372       useCoCo3Scr
00003e40: 6565 6e20 3f20 706c 6179 436f 436f 3342  een ? playCoCo3B
00003e50: 656c 6c20 3a20 2876 6f69 6420 282a 2928  ell : (void (*)(
00003e60: 766f 6964 2929 204e 554c 4c2c 2020 2f2f  void)) NULL,  //
00003e70: 2062 656c 6c20 6675 6e63 7469 6f6e 2028   bell function (
00003e80: 6465 6661 756c 7420 6973 2042 6173 6963  default is Basic
00003e90: 2773 2053 4f55 4e44 2031 2c31 290a 2020  's SOUND 1,1).  
00003ea0: 2020 2020 2020 2020 2020 2020 2020 2365                #e
00003eb0: 6c69 6620 6465 6669 6e65 6428 4452 4147  lif defined(DRAG
00003ec0: 4f4e 290a 2020 2020 2020 2020 2020 2020  ON).            
00003ed0: 2020 2020 4e55 4c4c 2c0a 2020 2020 2020      NULL,.      
00003ee0: 2020 2020 2020 2020 2020 2365 6c69 6620            #elif 
00003ef0: 6465 6669 6e65 6428 4f53 3929 0a20 2020  defined(OS9).   
00003f00: 2020 2020 2020 2020 2020 2020 2070 6c61               pla
00003f10: 794f 5339 4265 6c6c 2c0a 2020 2020 2020  yOS9Bell,.      
00003f20: 2020 2020 2020 2020 2020 2365 6e64 6966            #endif
00003f30: 0a20 2020 2020 2020 2020 2020 207d 2c0a  .            },.
00003f40: 0a20 2020 2020 2020 2020 2020 2075 7365  .            use
00003f50: 436f 436f 3353 6372 6565 6e20 3f20 3332  CoCo3Screen ? 32
00003f60: 3020 3a20 302c 2020 2f2f 206e 756d 5069  0 : 0,  // numPi
00003f70: 7865 6c73 5065 7252 6f77 0a20 2020 2020  xelsPerRow.     
00003f80: 2020 2020 2020 2075 7365 436f 436f 3353         useCoCo3S
00003f90: 6372 6565 6e20 3f20 3139 32c2 a03a 2030  creen ? 192..: 0
00003fa0: 2c20 202f 2f20 6e75 6d50 6978 656c 7352  ,  // numPixelsR
00003fb0: 6f77 5065 7253 6372 6565 6e0a 2020 2020  owPerScreen.    
00003fc0: 2020 2020 2020 2020 7573 6543 6f43 6f33          useCoCo3
00003fd0: 5363 7265 656e 203f 2034 203a 2030 2c20  Screen ? 4 : 0, 
00003fe0: 202f 2f20 6e75 6d42 6974 7350 6572 5069   // numBitsPerPi
00003ff0: 7865 6c0a 2020 2020 2020 2020 2020 2020  xel.            
00004000: 7573 6543 6f43 6f33 5363 7265 656e 203f  useCoCo3Screen ?
00004010: 2043 5f59 454c 4c4f 5720 3a20 302c 2020   C_YELLOW : 0,  
00004020: 2f2f 2066 6743 6f6c 6f72 0a20 2020 2020  // fgColor.     
00004030: 2020 2020 2020 2075 7365 436f 436f 3353         useCoCo3S
00004040: 6372 6565 6e20 3f20 435f 5245 4420 3a20  creen ? C_RED : 
00004050: 302c 2020 2f2f 2066 6742 6f6c 6443 6f6c  0,  // fgBoldCol
00004060: 6f72 0a20 2020 2020 2020 2020 2020 2075  or.            u
00004070: 7365 436f 436f 3353 6372 6565 6e20 3f20  seCoCo3Screen ? 
00004080: 435f 424c 5545 203a 2030 2c20 202f 2f20  C_BLUE : 0,  // 
00004090: 6267 436f 6c6f 720a 2020 2020 2020 2020  bgColor.        
000040a0: 7d3b 0a0a 2020 2020 2369 6620 6465 6669  };..    #if defi
000040b0: 6e65 6428 5f43 4f43 4f5f 4241 5349 435f  ned(_COCO_BASIC_
000040c0: 290a 2020 2020 6966 2028 7573 6543 6f43  ).    if (useCoC
000040d0: 6f33 5363 7265 656e 290a 2020 2020 2020  o3Screen).      
000040e0: 2020 7368 6f77 436f 436f 3347 7261 7068    showCoCo3Graph
000040f0: 6963 734d 6f64 6528 696e 6974 2e62 6743  icsMode(init.bgC
00004100: 6f6c 6f72 293b 0a20 2020 2065 6c73 650a  olor);.    else.
00004110: 2020 2020 2020 2020 7368 6f77 504d 6f64          showPMod
00004120: 6534 5363 7265 656e 4174 4275 6666 6572  e4ScreenAtBuffer
00004130: 2869 6e69 742e 696e 6974 2e74 6578 7453  (init.init.textS
00004140: 6372 6565 6e42 7566 6665 7229 3b0a 2020  creenBuffer);.  
00004150: 2020 2365 6c69 6620 6465 6669 6e65 6428    #elif defined(
00004160: 4452 4147 4f4e 290a 2020 2020 7368 6f77  DRAGON).    show
00004170: 504d 6f64 6534 5363 7265 656e 4174 4275  PMode4ScreenAtBu
00004180: 6666 6572 2869 6e69 742e 696e 6974 2e74  ffer(init.init.t
00004190: 6578 7453 6372 6565 6e42 7566 6665 7229  extScreenBuffer)
000041a0: 3b0a 2020 2020 2365 6c69 6620 6465 6669  ;.    #elif defi
000041b0: 6e65 6428 4f53 3929 0a20 2020 206d 656d  ned(OS9).    mem
000041c0: 7365 7431 3628 7363 7265 656e 4275 6666  set16(screenBuff
000041d0: 6572 2c20 3078 4646 4646 2c20 3631 3434  er, 0xFFFF, 6144
000041e0: 202f 2032 293b 2020 2f2f 2063 6c65 6172   / 2);  // clear
000041f0: 2050 4d4f 4445 2034 2073 6372 6565 6e20   PMODE 4 screen 
00004200: 746f 2067 7265 656e 0a20 2020 2023 656e  to green.    #en
00004210: 6469 660a 0a20 2020 2069 6e69 7448 6952  dif..    initHiR
00004220: 6573 5465 7874 5363 7265 656e 3228 2669  esTextScreen2(&i
00004230: 6e69 7429 3b0a 0a20 2020 2042 4f4f 4c20  nit);..    BOOL 
00004240: 636f 6e74 203d 2064 656d 6f43 6f6e 7465  cont = demoConte
00004250: 6e74 7328 7573 6534 7838 466f 6e74 2c20  nts(use4x8Font, 
00004260: 7573 6543 6f43 6f33 5363 7265 656e 293b  useCoCo3Screen);
00004270: 0a0a 2020 2020 6966 2028 7573 6543 6f43  ..    if (useCoC
00004280: 6f33 5363 7265 656e 290a 2020 2020 7b0a  o3Screen).    {.
00004290: 2020 2020 2020 2020 2f2f 2043 616e 6e6f          // Canno
000042a0: 7420 676f 2062 6163 6b20 746f 2042 6173  t go back to Bas
000042b0: 6963 2066 726f 6d20 7468 6520 436f 436f  ic from the CoCo
000042c0: 2033 2064 656d 6f2c 0a20 2020 2020 2020   3 demo,.       
000042d0: 202f 2f20 736f 2070 7269 6e74 2061 206d   // so print a m
000042e0: 6573 7361 6765 2069 6e73 7465 6164 2e0a  essage instead..
000042f0: 2020 2020 2020 2020 636c 7273 6372 2829          clrscr()
00004300: 3b0a 2020 2020 2020 2020 7772 6974 6543  ;.        writeC
00004310: 656e 7465 7265 644c 696e 6528 3131 2c0a  enteredLine(11,.
00004320: 2020 2020 2020 2020 2020 2020 2020 2020                  
00004330: 2245 6e64 206f 6620 7468 6520 6465 6d6f  "End of the demo
00004340: 2e20 5265 626f 6f74 2074 6865 2043 6f43  . Reboot the CoC
00004350: 6f20 746f 2067 6f20 6261 636b 2074 6f20  o to go back to 
00004360: 4261 7369 632e 2229 3b0a 2020 2020 7d0a  Basic.");.    }.
00004370: 0a20 2020 2063 6c6f 7365 4869 5265 7354  .    closeHiResT
00004380: 6578 7453 6372 6565 6e28 293b 2020 2f2f  extScreen();  //
00004390: 2074 6869 7320 756e 686f 6f6b 7320 7072   this unhooks pr
000043a0: 696e 7466 2829 2066 726f 6d20 6869 7265  intf() from hire
000043b0: 7374 7874 0a0a 2020 2020 6966 2028 2175  stxt..    if (!u
000043c0: 7365 436f 436f 3353 6372 6565 6e29 2020  seCoCo3Screen)  
000043d0: 2f2f 2043 6f43 6f20 3320 6465 6d6f 2064  // CoCo 3 demo d
000043e0: 6f65 7320 6e6f 7420 676f 2062 6163 6b20  oes not go back 
000043f0: 746f 2074 6578 7420 6d6f 6465 0a20 2020  to text mode.   
00004400: 2020 2020 2072 6573 746f 7265 5465 7874       restoreText
00004410: 5363 7265 656e 2829 3b0a 0a20 2020 2023  Screen();..    #
00004420: 6966 6465 6620 4f53 390a 2020 2020 4b65  ifdef OS9.    Ke
00004430: 7962 6f61 7264 5f73 6875 7464 6f77 6e28  yboard_shutdown(
00004440: 2674 6865 4b65 7962 6f61 7264 293b 0a20  &theKeyboard);. 
00004450: 2020 2023 656e 6469 660a 0a20 2020 2072     #endif..    r
00004460: 6574 7572 6e20 636f 6e74 3b0a 7d0a 0a0a  eturn cont;.}...
00004470: 696e 7420 6d61 696e 2829 0a7b 0a20 2020  int main().{.   
00004480: 2023 6966 2030 2020 2f2a 2055 7365 6675   #if 0  /* Usefu
00004490: 6c20 7768 656e 2064 6576 656c 6f70 696e  l when developin
000044a0: 672e 202a 2f0a 2020 2020 7072 696e 7466  g. */.    printf
000044b0: 2822 6d61 696e 2829 2062 7569 6c64 2074  ("main() build t
000044c0: 696d 653a 5c6e 2573 2025 735c 6e50 7265  ime:\n%s %s\nPre
000044d0: 7373 2045 6e74 6572 3a20 222c 205f 5f44  ss Enter: ", __D
000044e0: 4154 455f 5f2c 205f 5f54 494d 455f 5f29  ATE__, __TIME__)
000044f0: 3b0a 2020 2020 7265 6164 6c69 6e65 2829  ;.    readline()
00004500: 3b0a 2020 2020 2365 6e64 6966 0a0a 2020  ;.    #endif..  
00004510: 2020 424f 4f4c 2075 7365 436f 436f 3353    BOOL useCoCo3S
00004520: 6372 6565 6e20 3d20 4641 4c53 453b 0a0a  creen = FALSE;..
00004530: 2020 2020 2369 6664 6566 204f 5339 0a20      #ifdef OS9. 
00004540: 2020 204f 5339 5469 6d65 725f 696e 6974     OS9Timer_init
00004550: 2831 293b 0a20 2020 2074 696d 6572 4164  (1);.    timerAd
00004560: 6472 6573 7320 3d20 4f53 3954 696d 6572  dress = OS9Timer
00004570: 5f67 6574 5469 6d65 7241 6464 7265 7373  _getTimerAddress
00004580: 2829 3b0a 2020 2020 2365 6c73 650a 2020  ();.    #else.  
00004590: 2020 6973 436f 436f 3320 3d20 282a 2028    isCoCo3 = (* (
000045a0: 776f 7264 202a 2920 3078 4646 4638 203d  word *) 0xFFF8 =
000045b0: 3d20 3078 4645 4637 293b 0a20 2020 2069  = 0xFEF7);.    i
000045c0: 6620 2869 7343 6f43 6f33 290a 2020 2020  f (isCoCo3).    
000045d0: 7b0a 2020 2020 2020 2020 7267 6228 293b  {.        rgb();
000045e0: 2020 2f2f 2073 6f20 7468 6174 2074 6865    // so that the
000045f0: 2063 7572 736f 7220 666c 6173 6865 7320   cursor flashes 
00004600: 7468 6520 7269 6768 7420 636f 6c6f 7273  the right colors
00004610: 0a20 2020 2020 2020 2070 7269 6e74 6628  .        printf(
00004620: 2255 5345 2033 3230 5831 3932 5831 3620  "USE 320X192X16 
00004630: 4d4f 4445 3f20 2859 2f4e 2920 2229 3b0a  MODE? (Y/N) ");.
00004640: 2020 2020 2020 2020 636f 6e73 7420 6368          const ch
00004650: 6172 202a 6c69 6e65 203d 2072 6561 646c  ar *line = readl
00004660: 696e 6528 293b 0a20 2020 2020 2020 2069  ine();.        i
00004670: 6620 2874 6f75 7070 6572 286c 696e 655b  f (toupper(line[
00004680: 305d 2920 213d 2027 4e27 290a 2020 2020  0]) != 'N').    
00004690: 2020 2020 2020 2020 7573 6543 6f43 6f33          useCoCo3
000046a0: 5363 7265 656e 203d 2054 5255 453b 0a20  Screen = TRUE;. 
000046b0: 2020 207d 0a0a 2020 2020 2369 6664 6566     }..    #ifdef
000046c0: 205f 434f 434f 5f42 4153 4943 5f0a 2020   _COCO_BASIC_.  
000046d0: 2020 6966 2028 7573 6543 6f43 6f33 5363    if (useCoCo3Sc
000046e0: 7265 656e 290a 2020 2020 2020 2020 7469  reen).        ti
000046f0: 6d65 7241 6464 7265 7373 203d 2026 7469  merAddress = &ti
00004700: 6d65 723b 0a20 2020 2065 6c73 650a 2020  mer;.    else.  
00004710: 2020 2365 6e64 6966 0a20 2020 2020 2020    #endif.       
00004720: 2074 696d 6572 4164 6472 6573 7320 3d20   timerAddress = 
00004730: 2877 6f72 6420 2a29 2030 7830 3131 323b  (word *) 0x0112;
00004740: 2020 2f2f 2043 6f6c 6f72 2042 6173 6963    // Color Basic
00004750: 2054 494d 4552 2076 6172 6961 626c 650a   TIMER variable.
00004760: 0a20 2020 2023 656e 6469 660a 0a20 2020  .    #endif..   
00004770: 2023 6966 2064 6566 696e 6564 2855 5345   #if defined(USE
00004780: 5f35 3178 3234 2920 2626 2064 6566 696e  _51x24) && defin
00004790: 6564 2855 5345 5f34 3278 3234 290a 2020  ed(USE_42x24).  
000047a0: 2020 6966 2028 6465 6d6f 2854 5255 452c    if (demo(TRUE,
000047b0: 2075 7365 436f 436f 3353 6372 6565 6e29   useCoCo3Screen)
000047c0: 290a 2020 2020 7b0a 2020 2020 2020 2020  ).    {.        
000047d0: 6966 2028 2175 7365 436f 436f 3353 6372  if (!useCoCo3Scr
000047e0: 6565 6e29 0a20 2020 2020 2020 2020 2020  een).           
000047f0: 2064 656d 6f28 4641 4c53 452c 2046 414c   demo(FALSE, FAL
00004800: 5345 293b 2020 2f2f 2034 322d 636f 6c75  SE);  // 42-colu
00004810: 6d6e 206d 6f64 650a 2020 2020 7d0a 2020  mn mode.    }.  
00004820: 2020 2365 6c69 6620 6465 6669 6e65 6428    #elif defined(
00004830: 5553 455f 3531 7832 3429 0a20 2020 2064  USE_51x24).    d
00004840: 656d 6f28 5452 5545 2c20 7573 6543 6f43  emo(TRUE, useCoC
00004850: 6f33 5363 7265 656e 293b 0a20 2020 2023  o3Screen);.    #
00004860: 656c 7365 0a20 2020 2069 6620 2821 7573  else.    if (!us
00004870: 6543 6f43 6f33 5363 7265 656e 290a 2020  eCoCo3Screen).  
00004880: 2020 2020 2020 6465 6d6f 2846 414c 5345        demo(FALSE
00004890: 2c20 4641 4c53 4529 3b20 202f 2f20 3432  , FALSE);  // 42
000048a0: 2d63 6f6c 756d 6e20 6d6f 6465 0a20 2020  -column mode.   
000048b0: 2023 656e 6469 660a 0a20 2020 2023 6966   #endif..    #if
000048c0: 6465 6620 4f53 390a 2020 2020 4f53 3954  def OS9.    OS9T
000048d0: 696d 6572 5f73 6875 7464 6f77 6e28 293b  imer_shutdown();
000048e0: 0a20 2020 2023 656e 6469 660a 0a20 2020  .    #endif..   
000048f0: 2069 6620 2875 7365 436f 436f 3353 6372   if (useCoCo3Scr
00004900: 6565 6e29 0a20 2020 207b 0a20 2020 2020  een).    {.     
00004910: 2020 202f 2f20 4361 6e6e 6f74 2067 6f20     // Cannot go 
00004920: 6261 636b 2074 6f20 4261 7369 632c 2077  back to Basic, w
00004930: 6869 6368 2067 6f74 206f 7665 7277 7269  hich got overwri
00004940: 7474 656e 2e0a 2020 2020 2020 2020 666f  tten..        fo
00004950: 7220 283b 3b29 0a20 2020 2020 2020 2020  r (;;).         
00004960: 2020 203b 0a20 2020 207d 0a0a 2020 2020     ;.    }..    
00004970: 7072 696e 7466 2822 454e 4420 4f46 2054  printf("END OF T
00004980: 4845 2044 454d 4f2e 5c6e 2229 3b20 202f  HE DEMO.\n");  /
00004990: 2f20 7072 696e 7466 2829 206e 6f77 2077  / printf() now w
000049a0: 7269 7465 7320 746f 206e 6f72 6d61 6c20  rites to normal 
000049b0: 636f 6e73 6f6c 650a 2020 2020 7265 7475  console.    retu
000049c0: 726e 2030 3b0a 7d0a                      rn 0;.}.
